### YamlMime:ManagedReference
items:
- uid: Global.ParticleControl
  commentId: T:Global.ParticleControl
  id: ParticleControl
  parent: Global
  children:
  - Global.ParticleControl.anim
  - Global.ParticleControl.destroyAfterPlay
  - Global.ParticleControl.particle
  - Global.ParticleControl.particleAudio
  langs:
  - csharp
  - vb
  name: ParticleControl
  nameWithType: ParticleControl
  fullName: ParticleControl
  type: Class
  source:
    id: ParticleControl
    path: ''
    startLine: 7091
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ncontroliert die Particle system effecte und Particle Sounds\n"
  example: []
  syntax:
    content: 'public class ParticleControl : MonoBehaviour'
    content.vb: >-
      Public Class ParticleControl
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.ParticleControl.particle
  commentId: F:Global.ParticleControl.particle
  id: particle
  parent: Global.ParticleControl
  langs:
  - csharp
  - vb
  name: particle
  nameWithType: ParticleControl.particle
  fullName: ParticleControl.particle
  type: Field
  source:
    id: particle
    path: ''
    startLine: 7096
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe used particle system\n"
  example: []
  syntax:
    content: public ParticleSystem particle
    return:
      type: Global.ParticleSystem
    content.vb: Public particle As ParticleSystem
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.ParticleControl.destroyAfterPlay
  commentId: F:Global.ParticleControl.destroyAfterPlay
  id: destroyAfterPlay
  parent: Global.ParticleControl
  langs:
  - csharp
  - vb
  name: destroyAfterPlay
  nameWithType: ParticleControl.destroyAfterPlay
  fullName: ParticleControl.destroyAfterPlay
  type: Field
  source:
    id: destroyAfterPlay
    path: ''
    startLine: 7100
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ndestorys after playing\n"
  example: []
  syntax:
    content: public bool destroyAfterPlay
    return:
      type: System.Boolean
    content.vb: Public destroyAfterPlay As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.ParticleControl.particleAudio
  commentId: F:Global.ParticleControl.particleAudio
  id: particleAudio
  parent: Global.ParticleControl
  langs:
  - csharp
  - vb
  name: particleAudio
  nameWithType: ParticleControl.particleAudio
  fullName: ParticleControl.particleAudio
  type: Field
  source:
    id: particleAudio
    path: ''
    startLine: 7105
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nparticle audio\n"
  example: []
  syntax:
    content: public List<AudioSource> particleAudio
    return:
      type: System.Collections.Generic.List{AudioSource}
    content.vb: Public particleAudio As List(Of AudioSource)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.ParticleControl.anim
  commentId: F:Global.ParticleControl.anim
  id: anim
  parent: Global.ParticleControl
  langs:
  - csharp
  - vb
  name: anim
  nameWithType: ParticleControl.anim
  fullName: ParticleControl.anim
  type: Field
  source:
    id: anim
    path: ''
    startLine: 7109
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nanimation\n"
  example: []
  syntax:
    content: public Animator anim
    return:
      type: Global.Animator
    content.vb: Public anim As Animator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ParticleSystem
  commentId: '!:Global.ParticleSystem'
  isExternal: true
  name: ParticleSystem
  nameWithType: ParticleSystem
  fullName: ParticleSystem
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{AudioSource}
  commentId: T:System.Collections.Generic.List{AudioSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AudioSource>
  nameWithType: List<AudioSource>
  fullName: System.Collections.Generic.List<AudioSource>
  nameWithType.vb: List(Of AudioSource)
  fullName.vb: System.Collections.Generic.List(Of AudioSource)
  name.vb: List(Of AudioSource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.AudioSource
    name: AudioSource
    nameWithType: AudioSource
    fullName: AudioSource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.AudioSource
    name: AudioSource
    nameWithType: AudioSource
    fullName: AudioSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.Animator
  isExternal: true
  name: Animator
  nameWithType: Animator
  fullName: Animator

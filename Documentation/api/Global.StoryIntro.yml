### YamlMime:ManagedReference
items:
- uid: Global.StoryIntro
  commentId: T:Global.StoryIntro
  id: StoryIntro
  parent: Global
  children:
  - Global.StoryIntro.mainMenu
  - Global.StoryIntro.Skip
  - Global.StoryIntro.slides
  langs:
  - csharp
  - vb
  name: StoryIntro
  nameWithType: StoryIntro
  fullName: StoryIntro
  type: Class
  source:
    id: StoryIntro
    path: ''
    startLine: 9690
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nclass to control the story intro\n"
  example: []
  syntax:
    content: 'public class StoryIntro : MonoBehaviour'
    content.vb: >-
      Public Class StoryIntro
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.StoryIntro.mainMenu
  commentId: F:Global.StoryIntro.mainMenu
  id: mainMenu
  parent: Global.StoryIntro
  langs:
  - csharp
  - vb
  name: mainMenu
  nameWithType: StoryIntro.mainMenu
  fullName: StoryIntro.mainMenu
  type: Field
  source:
    id: mainMenu
    path: ''
    startLine: 9694
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public GameObject mainMenu
    return:
      type: Global.GameObject
    content.vb: Public mainMenu As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.StoryIntro.slides
  commentId: F:Global.StoryIntro.slides
  id: slides
  parent: Global.StoryIntro
  langs:
  - csharp
  - vb
  name: slides
  nameWithType: StoryIntro.slides
  fullName: StoryIntro.slides
  type: Field
  source:
    id: slides
    path: ''
    startLine: 9696
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<GameObject> slides
    return:
      type: System.Collections.Generic.List{GameObject}
    content.vb: Public slides As List(Of GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.StoryIntro.Skip
  commentId: P:Global.StoryIntro.Skip
  id: Skip
  parent: Global.StoryIntro
  langs:
  - csharp
  - vb
  name: Skip
  nameWithType: StoryIntro.Skip
  fullName: StoryIntro.Skip
  type: Property
  source:
    id: Skip
    path: ''
    startLine: 9704
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public bool Skip { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Skip As Boolean
  overload: Global.StoryIntro.Skip*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: System.Collections.Generic.List{GameObject}
  commentId: T:System.Collections.Generic.List{GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.StoryIntro.Skip*
  commentId: Overload:Global.StoryIntro.Skip
  name: Skip
  nameWithType: StoryIntro.Skip
  fullName: StoryIntro.Skip
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

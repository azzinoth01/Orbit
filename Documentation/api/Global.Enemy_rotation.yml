### YamlMime:ManagedReference
items:
- uid: Global.Enemy_rotation
  commentId: T:Global.Enemy_rotation
  id: Enemy_rotation
  parent: Global
  children:
  - Global.Enemy_rotation.activatedAfterMoveIn
  - Global.Enemy_rotation.rotateSpeed
  - Global.Enemy_rotation.rotateTowardsPlayer
  langs:
  - csharp
  - vb
  name: Enemy_rotation
  nameWithType: Enemy_rotation
  fullName: Enemy_rotation
  type: Class
  source:
    id: Enemy_rotation
    path: ''
    startLine: 3856
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ncontrols the enemy rotation\n"
  example: []
  syntax:
    content: 'public class Enemy_rotation : MonoBehaviour'
    content.vb: >-
      Public Class Enemy_rotation
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.Enemy_rotation.rotateTowardsPlayer
  commentId: F:Global.Enemy_rotation.rotateTowardsPlayer
  id: rotateTowardsPlayer
  parent: Global.Enemy_rotation
  langs:
  - csharp
  - vb
  name: rotateTowardsPlayer
  nameWithType: Enemy_rotation.rotateTowardsPlayer
  fullName: Enemy_rotation.rotateTowardsPlayer
  type: Field
  source:
    id: rotateTowardsPlayer
    path: ''
    startLine: 3861
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nif true rotates the enemy towards the player\n"
  example: []
  syntax:
    content: public bool rotateTowardsPlayer
    return:
      type: System.Boolean
    content.vb: Public rotateTowardsPlayer As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy_rotation.rotateSpeed
  commentId: F:Global.Enemy_rotation.rotateSpeed
  id: rotateSpeed
  parent: Global.Enemy_rotation
  langs:
  - csharp
  - vb
  name: rotateSpeed
  nameWithType: Enemy_rotation.rotateSpeed
  fullName: Enemy_rotation.rotateSpeed
  type: Field
  source:
    id: rotateSpeed
    path: ''
    startLine: 3865
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe rotation speed\n"
  example: []
  syntax:
    content: public float rotateSpeed
    return:
      type: System.Single
    content.vb: Public rotateSpeed As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy_rotation.activatedAfterMoveIn
  commentId: F:Global.Enemy_rotation.activatedAfterMoveIn
  id: activatedAfterMoveIn
  parent: Global.Enemy_rotation
  langs:
  - csharp
  - vb
  name: activatedAfterMoveIn
  nameWithType: Enemy_rotation.activatedAfterMoveIn
  fullName: Enemy_rotation.activatedAfterMoveIn
  type: Field
  source:
    id: activatedAfterMoveIn
    path: ''
    startLine: 3871
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nactivates the rotation after hiting the first waypoint\n"
  example: []
  syntax:
    content: public bool activatedAfterMoveIn
    return:
      type: System.Boolean
    content.vb: Public activatedAfterMoveIn As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single

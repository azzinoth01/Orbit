### YamlMime:ManagedReference
items:
- uid: Global.Enemy
  commentId: T:Global.Enemy
  id: Enemy
  parent: Global
  children:
  - Global.Enemy.body
  - Global.Enemy.bossHp
  - Global.Enemy.bossUI
  - Global.Enemy.collisionDmg
  - Global.Enemy.deathParticelSystem
  - Global.Enemy.delayToNextWaypoint
  - Global.Enemy.destoryAfterCollison
  - Global.Enemy.doNotCountAsKill
  - Global.Enemy.doNotUseForceToMove
  - Global.Enemy.enemyHitSound
  - Global.Enemy.followPlayerMovementX
  - Global.Enemy.followPlayerMovementY
  - Global.Enemy.force
  - Global.Enemy.health
  - Global.Enemy.loop
  - Global.Enemy.maxDuration
  - Global.Enemy.MaxHealth
  - Global.Enemy.maxMonyeValue
  - Global.Enemy.maxSpeed
  - Global.Enemy.minMoneyValue
  - Global.Enemy.moveToPlayer
  - Global.Enemy.moveToRandomWaypoints
  - Global.Enemy.playerfollowRange
  - Global.Enemy.showBossHp
  - Global.Enemy.SpawnerCallback
  - Global.Enemy.startMovingOut
  - Global.Enemy.takeDmg(System.Single)
  - Global.Enemy.waypointPrefab
  - Global.Enemy.waypoints
  langs:
  - csharp
  - vb
  name: Enemy
  nameWithType: Enemy
  fullName: Enemy
  type: Class
  source:
    id: Enemy
    path: ''
    startLine: 3007
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nclass describes enemys and their movement\n"
  example: []
  syntax:
    content: 'public class Enemy : MonoBehaviour'
    content.vb: >-
      Public Class Enemy
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.Enemy.health
  commentId: F:Global.Enemy.health
  id: health
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: health
  nameWithType: Enemy.health
  fullName: Enemy.health
  type: Field
  source:
    id: health
    path: ''
    startLine: 3013
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nhealth of enemy\n"
  example: []
  syntax:
    content: public float health
    return:
      type: System.Single
    content.vb: Public health As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.body
  commentId: F:Global.Enemy.body
  id: body
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: body
  nameWithType: Enemy.body
  fullName: Enemy.body
  type: Field
  source:
    id: body
    path: ''
    startLine: 3020
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nphysic object of enemy\n"
  example: []
  syntax:
    content: public Rigidbody2D body
    return:
      type: Global.Rigidbody2D
    content.vb: Public body As Rigidbody2D
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.waypoints
  commentId: F:Global.Enemy.waypoints
  id: waypoints
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: waypoints
  nameWithType: Enemy.waypoints
  fullName: Enemy.waypoints
  type: Field
  source:
    id: waypoints
    path: ''
    startLine: 3025
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nwaypoint liste for movement\n"
  example: []
  syntax:
    content: public List<Vector2> waypoints
    return:
      type: System.Collections.Generic.List{Vector2}
    content.vb: Public waypoints As List(Of Vector2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.moveToRandomWaypoints
  commentId: F:Global.Enemy.moveToRandomWaypoints
  id: moveToRandomWaypoints
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: moveToRandomWaypoints
  nameWithType: Enemy.moveToRandomWaypoints
  fullName: Enemy.moveToRandomWaypoints
  type: Field
  source:
    id: moveToRandomWaypoints
    path: ''
    startLine: 3029
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nmakes the enemy more to a random waypoint\n"
  example: []
  syntax:
    content: public bool moveToRandomWaypoints
    return:
      type: System.Boolean
    content.vb: Public moveToRandomWaypoints As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.moveToPlayer
  commentId: F:Global.Enemy.moveToPlayer
  id: moveToPlayer
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: moveToPlayer
  nameWithType: Enemy.moveToPlayer
  fullName: Enemy.moveToPlayer
  type: Field
  source:
    id: moveToPlayer
    path: ''
    startLine: 3033
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nrenembers the current player position and moves towards it \n"
  example: []
  syntax:
    content: public bool moveToPlayer
    return:
      type: System.Boolean
    content.vb: Public moveToPlayer As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.followPlayerMovementX
  commentId: F:Global.Enemy.followPlayerMovementX
  id: followPlayerMovementX
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: followPlayerMovementX
  nameWithType: Enemy.followPlayerMovementX
  fullName: Enemy.followPlayerMovementX
  type: Field
  source:
    id: followPlayerMovementX
    path: ''
    startLine: 3038
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nfollows the player on the x Position\n"
  example: []
  syntax:
    content: public bool followPlayerMovementX
    return:
      type: System.Boolean
    content.vb: Public followPlayerMovementX As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.followPlayerMovementY
  commentId: F:Global.Enemy.followPlayerMovementY
  id: followPlayerMovementY
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: followPlayerMovementY
  nameWithType: Enemy.followPlayerMovementY
  fullName: Enemy.followPlayerMovementY
  type: Field
  source:
    id: followPlayerMovementY
    path: ''
    startLine: 3042
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nfollows the palyer on the y Position\n"
  example: []
  syntax:
    content: public bool followPlayerMovementY
    return:
      type: System.Boolean
    content.vb: Public followPlayerMovementY As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.playerfollowRange
  commentId: F:Global.Enemy.playerfollowRange
  id: playerfollowRange
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: playerfollowRange
  nameWithType: Enemy.playerfollowRange
  fullName: Enemy.playerfollowRange
  type: Field
  source:
    id: playerfollowRange
    path: ''
    startLine: 3046
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ndescribes how precise the follow movement has to be\n"
  example: []
  syntax:
    content: public float playerfollowRange
    return:
      type: System.Single
    content.vb: Public playerfollowRange As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.force
  commentId: F:Global.Enemy.force
  id: force
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: force
  nameWithType: Enemy.force
  fullName: Enemy.force
  type: Field
  source:
    id: force
    path: ''
    startLine: 3050
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe used force to move the enemy\n"
  example: []
  syntax:
    content: public float force
    return:
      type: System.Single
    content.vb: Public force As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.maxSpeed
  commentId: F:Global.Enemy.maxSpeed
  id: maxSpeed
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: maxSpeed
  nameWithType: Enemy.maxSpeed
  fullName: Enemy.maxSpeed
  type: Field
  source:
    id: maxSpeed
    path: ''
    startLine: 3054
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe maximum speed the enemy can have\n"
  example: []
  syntax:
    content: public float maxSpeed
    return:
      type: System.Single
    content.vb: Public maxSpeed As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.loop
  commentId: F:Global.Enemy.loop
  id: loop
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: loop
  nameWithType: Enemy.loop
  fullName: Enemy.loop
  type: Field
  source:
    id: loop
    path: ''
    startLine: 3060
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nloops the waypoints if it has more than 1\n"
  example: []
  syntax:
    content: public bool loop
    return:
      type: System.Boolean
    content.vb: Public loop As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.waypointPrefab
  commentId: F:Global.Enemy.waypointPrefab
  id: waypointPrefab
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: waypointPrefab
  nameWithType: Enemy.waypointPrefab
  fullName: Enemy.waypointPrefab
  type: Field
  source:
    id: waypointPrefab
    path: ''
    startLine: 3065
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nwaypoint prefab\n"
  example: []
  syntax:
    content: public GameObject waypointPrefab
    return:
      type: Global.GameObject
    content.vb: Public waypointPrefab As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.maxDuration
  commentId: F:Global.Enemy.maxDuration
  id: maxDuration
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: maxDuration
  nameWithType: Enemy.maxDuration
  fullName: Enemy.maxDuration
  type: Field
  source:
    id: maxDuration
    path: ''
    startLine: 3073
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe maximum duration an enemy can stay in the scene. if it is 0 it can stay for an unlimited time\n"
  example: []
  syntax:
    content: public float maxDuration
    return:
      type: System.Single
    content.vb: Public maxDuration As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.delayToNextWaypoint
  commentId: F:Global.Enemy.delayToNextWaypoint
  id: delayToNextWaypoint
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: delayToNextWaypoint
  nameWithType: Enemy.delayToNextWaypoint
  fullName: Enemy.delayToNextWaypoint
  type: Field
  source:
    id: delayToNextWaypoint
    path: ''
    startLine: 3077
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe delay between waypoint movements\n"
  example: []
  syntax:
    content: public float delayToNextWaypoint
    return:
      type: System.Single
    content.vb: Public delayToNextWaypoint As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.collisionDmg
  commentId: F:Global.Enemy.collisionDmg
  id: collisionDmg
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: collisionDmg
  nameWithType: Enemy.collisionDmg
  fullName: Enemy.collisionDmg
  type: Field
  source:
    id: collisionDmg
    path: ''
    startLine: 3085
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ncollision dmg the player takes\n"
  example: []
  syntax:
    content: public int collisionDmg
    return:
      type: System.Int32
    content.vb: Public collisionDmg As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.destoryAfterCollison
  commentId: F:Global.Enemy.destoryAfterCollison
  id: destoryAfterCollison
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: destoryAfterCollison
  nameWithType: Enemy.destoryAfterCollison
  fullName: Enemy.destoryAfterCollison
  type: Field
  source:
    id: destoryAfterCollison
    path: ''
    startLine: 3089
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nif the enemy destorys itself with a collision\n"
  example: []
  syntax:
    content: public bool destoryAfterCollison
    return:
      type: System.Boolean
    content.vb: Public destoryAfterCollison As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.deathParticelSystem
  commentId: F:Global.Enemy.deathParticelSystem
  id: deathParticelSystem
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: deathParticelSystem
  nameWithType: Enemy.deathParticelSystem
  fullName: Enemy.deathParticelSystem
  type: Field
  source:
    id: deathParticelSystem
    path: ''
    startLine: 3095
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ndeath animation\n"
  example: []
  syntax:
    content: public GameObject deathParticelSystem
    return:
      type: Global.GameObject
    content.vb: Public deathParticelSystem As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.showBossHp
  commentId: F:Global.Enemy.showBossHp
  id: showBossHp
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: showBossHp
  nameWithType: Enemy.showBossHp
  fullName: Enemy.showBossHp
  type: Field
  source:
    id: showBossHp
    path: ''
    startLine: 3107
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nif the enemy uses the Boss UI\n"
  example: []
  syntax:
    content: public bool showBossHp
    return:
      type: System.Boolean
    content.vb: Public showBossHp As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.bossHp
  commentId: F:Global.Enemy.bossHp
  id: bossHp
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: bossHp
  nameWithType: Enemy.bossHp
  fullName: Enemy.bossHp
  type: Field
  source:
    id: bossHp
    path: ''
    startLine: 3111
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe Image of the Boss UI\n"
  example: []
  syntax:
    content: public Image bossHp
    return:
      type: Global.Image
    content.vb: Public bossHp As Image
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.bossUI
  commentId: F:Global.Enemy.bossUI
  id: bossUI
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: bossUI
  nameWithType: Enemy.bossUI
  fullName: Enemy.bossUI
  type: Field
  source:
    id: bossUI
    path: ''
    startLine: 3115
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe Boss UI\n"
  example: []
  syntax:
    content: public GameObject bossUI
    return:
      type: Global.GameObject
    content.vb: Public bossUI As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.minMoneyValue
  commentId: F:Global.Enemy.minMoneyValue
  id: minMoneyValue
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: minMoneyValue
  nameWithType: Enemy.minMoneyValue
  fullName: Enemy.minMoneyValue
  type: Field
  source:
    id: minMoneyValue
    path: ''
    startLine: 3127
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nminimum money drop value\nif minMoneyValue and maxMonyeValue are 0 the values is set to 1-100 \n"
  example: []
  syntax:
    content: public int minMoneyValue
    return:
      type: System.Int32
    content.vb: Public minMoneyValue As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.maxMonyeValue
  commentId: F:Global.Enemy.maxMonyeValue
  id: maxMonyeValue
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: maxMonyeValue
  nameWithType: Enemy.maxMonyeValue
  fullName: Enemy.maxMonyeValue
  type: Field
  source:
    id: maxMonyeValue
    path: ''
    startLine: 3132
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nmaximum money drop value\nif minMoneyValue and maxMonyeValue are 0 the values is set to 1-100 \n"
  example: []
  syntax:
    content: public int maxMonyeValue
    return:
      type: System.Int32
    content.vb: Public maxMonyeValue As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.doNotCountAsKill
  commentId: F:Global.Enemy.doNotCountAsKill
  id: doNotCountAsKill
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: doNotCountAsKill
  nameWithType: Enemy.doNotCountAsKill
  fullName: Enemy.doNotCountAsKill
  type: Field
  source:
    id: doNotCountAsKill
    path: ''
    startLine: 3137
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ndo not count this enemy as a killed enemy\n"
  example: []
  syntax:
    content: public bool doNotCountAsKill
    return:
      type: System.Boolean
    content.vb: Public doNotCountAsKill As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.enemyHitSound
  commentId: F:Global.Enemy.enemyHitSound
  id: enemyHitSound
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: enemyHitSound
  nameWithType: Enemy.enemyHitSound
  fullName: Enemy.enemyHitSound
  type: Field
  source:
    id: enemyHitSound
    path: ''
    startLine: 3142
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nhit sound for enemies\n"
  example: []
  syntax:
    content: public AudioSource enemyHitSound
    return:
      type: Global.AudioSource
    content.vb: Public enemyHitSound As AudioSource
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.doNotUseForceToMove
  commentId: F:Global.Enemy.doNotUseForceToMove
  id: doNotUseForceToMove
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: doNotUseForceToMove
  nameWithType: Enemy.doNotUseForceToMove
  fullName: Enemy.doNotUseForceToMove
  type: Field
  source:
    id: doNotUseForceToMove
    path: ''
    startLine: 3152
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nlets the enemy move always at full speed\n"
  example: []
  syntax:
    content: public bool doNotUseForceToMove
    return:
      type: System.Boolean
    content.vb: Public doNotUseForceToMove As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.SpawnerCallback
  commentId: P:Global.Enemy.SpawnerCallback
  id: SpawnerCallback
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: SpawnerCallback
  nameWithType: Enemy.SpawnerCallback
  fullName: Enemy.SpawnerCallback
  type: Property
  source:
    id: SpawnerCallback
    path: ''
    startLine: 3157
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nthe spawner of the enemy\n"
  example: []
  syntax:
    content: public Enemy_Spawner SpawnerCallback { get; set; }
    parameters: []
    return:
      type: Global.Enemy_Spawner
    content.vb: Public Property SpawnerCallback As Enemy_Spawner
  overload: Global.Enemy.SpawnerCallback*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.Enemy.MaxHealth
  commentId: P:Global.Enemy.MaxHealth
  id: MaxHealth
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: MaxHealth
  nameWithType: Enemy.MaxHealth
  fullName: Enemy.MaxHealth
  type: Property
  source:
    id: MaxHealth
    path: ''
    startLine: 3169
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nmaximum health of enemy\n"
  example: []
  syntax:
    content: public float MaxHealth { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MaxHealth As Single
  overload: Global.Enemy.MaxHealth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.Enemy.startMovingOut
  commentId: M:Global.Enemy.startMovingOut
  id: startMovingOut
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: startMovingOut()
  nameWithType: Enemy.startMovingOut()
  fullName: Enemy.startMovingOut()
  type: Method
  source:
    id: startMovingOut
    path: ''
    startLine: 3391
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nstarts the move out of this enemy if the enemy has reached its max duration\ndeaactivates the enemy script\n"
  example: []
  syntax:
    content: public void startMovingOut()
    content.vb: Public Sub startMovingOut
  overload: Global.Enemy.startMovingOut*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Enemy.takeDmg(System.Single)
  commentId: M:Global.Enemy.takeDmg(System.Single)
  id: takeDmg(System.Single)
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: takeDmg(Single)
  nameWithType: Enemy.takeDmg(Single)
  fullName: Enemy.takeDmg(System.Single)
  type: Method
  source:
    id: takeDmg
    path: ''
    startLine: 3582
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\ntake dmg function\n"
  example: []
  syntax:
    content: public void takeDmg(float dmg)
    parameters:
    - id: dmg
      type: System.Single
      description: dmg the enemy takes
    content.vb: Public Sub takeDmg(dmg As Single)
  overload: Global.Enemy.takeDmg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Global.Rigidbody2D
  isExternal: true
  name: Rigidbody2D
  nameWithType: Rigidbody2D
  fullName: Rigidbody2D
- uid: System.Collections.Generic.List{Vector2}
  commentId: T:System.Collections.Generic.List{Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Global.Image
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: Image
- uid: Global.AudioSource
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: AudioSource
- uid: Global.Enemy.SpawnerCallback*
  commentId: Overload:Global.Enemy.SpawnerCallback
  name: SpawnerCallback
  nameWithType: Enemy.SpawnerCallback
  fullName: Enemy.SpawnerCallback
- uid: Global.Enemy_Spawner
  commentId: T:Global.Enemy_Spawner
  name: Enemy_Spawner
  nameWithType: Enemy_Spawner
  fullName: Enemy_Spawner
- uid: Global.Enemy.MaxHealth*
  commentId: Overload:Global.Enemy.MaxHealth
  name: MaxHealth
  nameWithType: Enemy.MaxHealth
  fullName: Enemy.MaxHealth
- uid: Global.Enemy.startMovingOut*
  commentId: Overload:Global.Enemy.startMovingOut
  name: startMovingOut
  nameWithType: Enemy.startMovingOut
  fullName: Enemy.startMovingOut
- uid: Global.Enemy.takeDmg*
  commentId: Overload:Global.Enemy.takeDmg
  name: takeDmg
  nameWithType: Enemy.takeDmg
  fullName: Enemy.takeDmg

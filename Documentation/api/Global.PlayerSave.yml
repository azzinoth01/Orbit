### YamlMime:ManagedReference
items:
- uid: Global.PlayerSave
  commentId: T:Global.PlayerSave
  id: PlayerSave
  parent: Global
  children:
  - Global.PlayerSave.#ctor
  - Global.PlayerSave.BoughtItems
  - Global.PlayerSave.Level1Played
  - Global.PlayerSave.loadSettings
  - Global.PlayerSave.MainWeapon
  - Global.PlayerSave.Money
  - Global.PlayerSave.savingSetting
  - Global.PlayerSave.SecondaryWeapon
  - Global.PlayerSave.SecondaryWeapon1
  - Global.PlayerSave.ShieldPart
  - Global.PlayerSave.TutorialPlayed
  langs:
  - csharp
  - vb
  name: PlayerSave
  nameWithType: PlayerSave
  fullName: PlayerSave
  type: Class
  source:
    id: PlayerSave
    path: ''
    startLine: 8303
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nclass to save the player progress\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class PlayerSave
    content.vb: >-
      <Serializable>

      Public Class PlayerSave
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.PlayerSave.Money
  commentId: P:Global.PlayerSave.Money
  id: Money
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: PlayerSave.Money
  fullName: PlayerSave.Money
  type: Property
  source:
    id: Money
    path: ''
    startLine: 8319
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nplayer money\n"
  example: []
  syntax:
    content: public int Money { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Money As Integer
  overload: Global.PlayerSave.Money*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.MainWeapon
  commentId: P:Global.PlayerSave.MainWeapon
  id: MainWeapon
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: MainWeapon
  nameWithType: PlayerSave.MainWeapon
  fullName: PlayerSave.MainWeapon
  type: Property
  source:
    id: MainWeapon
    path: ''
    startLine: 8332
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nmain weapon of player\n"
  example: []
  syntax:
    content: public WeaponInfo MainWeapon { get; set; }
    parameters: []
    return:
      type: Global.WeaponInfo
    content.vb: Public Property MainWeapon As WeaponInfo
  overload: Global.PlayerSave.MainWeapon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.SecondaryWeapon
  commentId: P:Global.PlayerSave.SecondaryWeapon
  id: SecondaryWeapon
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: SecondaryWeapon
  nameWithType: PlayerSave.SecondaryWeapon
  fullName: PlayerSave.SecondaryWeapon
  type: Property
  source:
    id: SecondaryWeapon
    path: ''
    startLine: 8344
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nsecondary weapon of player\n"
  example: []
  syntax:
    content: public WeaponInfo SecondaryWeapon { get; set; }
    parameters: []
    return:
      type: Global.WeaponInfo
    content.vb: Public Property SecondaryWeapon As WeaponInfo
  overload: Global.PlayerSave.SecondaryWeapon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.SecondaryWeapon1
  commentId: P:Global.PlayerSave.SecondaryWeapon1
  id: SecondaryWeapon1
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: SecondaryWeapon1
  nameWithType: PlayerSave.SecondaryWeapon1
  fullName: PlayerSave.SecondaryWeapon1
  type: Property
  source:
    id: SecondaryWeapon1
    path: ''
    startLine: 8356
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nsecond secondary weapon of player\n"
  example: []
  syntax:
    content: public WeaponInfo SecondaryWeapon1 { get; set; }
    parameters: []
    return:
      type: Global.WeaponInfo
    content.vb: Public Property SecondaryWeapon1 As WeaponInfo
  overload: Global.PlayerSave.SecondaryWeapon1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.ShieldPart
  commentId: P:Global.PlayerSave.ShieldPart
  id: ShieldPart
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: ShieldPart
  nameWithType: PlayerSave.ShieldPart
  fullName: PlayerSave.ShieldPart
  type: Property
  source:
    id: ShieldPart
    path: ''
    startLine: 8368
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nship parts of player\n"
  example: []
  syntax:
    content: public Parts ShieldPart { get; set; }
    parameters: []
    return:
      type: Global.Parts
    content.vb: Public Property ShieldPart As Parts
  overload: Global.PlayerSave.ShieldPart*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.BoughtItems
  commentId: P:Global.PlayerSave.BoughtItems
  id: BoughtItems
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: BoughtItems
  nameWithType: PlayerSave.BoughtItems
  fullName: PlayerSave.BoughtItems
  type: Property
  source:
    id: BoughtItems
    path: ''
    startLine: 8380
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nlist of bought items in the shop\n"
  example: []
  syntax:
    content: public List<string> BoughtItems { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property BoughtItems As List(Of String)
  overload: Global.PlayerSave.BoughtItems*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.TutorialPlayed
  commentId: P:Global.PlayerSave.TutorialPlayed
  id: TutorialPlayed
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: TutorialPlayed
  nameWithType: PlayerSave.TutorialPlayed
  fullName: PlayerSave.TutorialPlayed
  type: Property
  source:
    id: TutorialPlayed
    path: ''
    startLine: 8392
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nturorial finished save\n"
  example: []
  syntax:
    content: public bool TutorialPlayed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TutorialPlayed As Boolean
  overload: Global.PlayerSave.TutorialPlayed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.Level1Played
  commentId: P:Global.PlayerSave.Level1Played
  id: Level1Played
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: Level1Played
  nameWithType: PlayerSave.Level1Played
  fullName: PlayerSave.Level1Played
  type: Property
  source:
    id: Level1Played
    path: ''
    startLine: 8404
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nlevel 1 finished save\n"
  example: []
  syntax:
    content: public bool Level1Played { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Level1Played As Boolean
  overload: Global.PlayerSave.Level1Played*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.#ctor
  commentId: M:Global.PlayerSave.#ctor
  id: '#ctor'
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: PlayerSave()
  nameWithType: PlayerSave.PlayerSave()
  fullName: PlayerSave.PlayerSave()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 8417
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nbase values for a new player\n"
  example: []
  syntax:
    content: public PlayerSave()
    content.vb: Public Sub New
  overload: Global.PlayerSave.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.savingSetting
  commentId: M:Global.PlayerSave.savingSetting
  id: savingSetting
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: savingSetting()
  nameWithType: PlayerSave.savingSetting()
  fullName: PlayerSave.savingSetting()
  type: Method
  source:
    id: savingSetting
    path: ''
    startLine: 8438
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nsaves player information\n"
  example: []
  syntax:
    content: public void savingSetting()
    content.vb: Public Sub savingSetting
  overload: Global.PlayerSave.savingSetting*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.PlayerSave.loadSettings
  commentId: M:Global.PlayerSave.loadSettings
  id: loadSettings
  parent: Global.PlayerSave
  langs:
  - csharp
  - vb
  name: loadSettings()
  nameWithType: PlayerSave.loadSettings()
  fullName: PlayerSave.loadSettings()
  type: Method
  source:
    id: loadSettings
    path: ''
    startLine: 8452
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nloads the player information from the saved data, if exists\n"
  example: []
  syntax:
    content: public static PlayerSave loadSettings()
    return:
      type: Global.PlayerSave
      description: 'returns the saved player information '
    content.vb: Public Shared Function loadSettings As PlayerSave
  overload: Global.PlayerSave.loadSettings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.PlayerSave.Money*
  commentId: Overload:Global.PlayerSave.Money
  name: Money
  nameWithType: PlayerSave.Money
  fullName: PlayerSave.Money
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Global.PlayerSave.MainWeapon*
  commentId: Overload:Global.PlayerSave.MainWeapon
  name: MainWeapon
  nameWithType: PlayerSave.MainWeapon
  fullName: PlayerSave.MainWeapon
- uid: Global.WeaponInfo
  commentId: T:Global.WeaponInfo
  name: WeaponInfo
  nameWithType: WeaponInfo
  fullName: WeaponInfo
- uid: Global.PlayerSave.SecondaryWeapon*
  commentId: Overload:Global.PlayerSave.SecondaryWeapon
  name: SecondaryWeapon
  nameWithType: PlayerSave.SecondaryWeapon
  fullName: PlayerSave.SecondaryWeapon
- uid: Global.PlayerSave.SecondaryWeapon1*
  commentId: Overload:Global.PlayerSave.SecondaryWeapon1
  name: SecondaryWeapon1
  nameWithType: PlayerSave.SecondaryWeapon1
  fullName: PlayerSave.SecondaryWeapon1
- uid: Global.PlayerSave.ShieldPart*
  commentId: Overload:Global.PlayerSave.ShieldPart
  name: ShieldPart
  nameWithType: PlayerSave.ShieldPart
  fullName: PlayerSave.ShieldPart
- uid: Global.Parts
  commentId: T:Global.Parts
  name: Parts
  nameWithType: Parts
  fullName: Parts
- uid: Global.PlayerSave.BoughtItems*
  commentId: Overload:Global.PlayerSave.BoughtItems
  name: BoughtItems
  nameWithType: PlayerSave.BoughtItems
  fullName: PlayerSave.BoughtItems
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.PlayerSave.TutorialPlayed*
  commentId: Overload:Global.PlayerSave.TutorialPlayed
  name: TutorialPlayed
  nameWithType: PlayerSave.TutorialPlayed
  fullName: PlayerSave.TutorialPlayed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Global.PlayerSave.Level1Played*
  commentId: Overload:Global.PlayerSave.Level1Played
  name: Level1Played
  nameWithType: PlayerSave.Level1Played
  fullName: PlayerSave.Level1Played
- uid: Global.PlayerSave.#ctor*
  commentId: Overload:Global.PlayerSave.#ctor
  name: PlayerSave
  nameWithType: PlayerSave.PlayerSave
  fullName: PlayerSave.PlayerSave
- uid: Global.PlayerSave.savingSetting*
  commentId: Overload:Global.PlayerSave.savingSetting
  name: savingSetting
  nameWithType: PlayerSave.savingSetting
  fullName: PlayerSave.savingSetting
- uid: Global.PlayerSave.loadSettings*
  commentId: Overload:Global.PlayerSave.loadSettings
  name: loadSettings
  nameWithType: PlayerSave.loadSettings
  fullName: PlayerSave.loadSettings
- uid: Global.PlayerSave
  commentId: T:Global.PlayerSave
  name: PlayerSave
  nameWithType: PlayerSave
  fullName: PlayerSave

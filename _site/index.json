{
  "api/Global.AttachGameObjectsToParticles.html": {
    "href": "api/Global.AttachGameObjectsToParticles.html",
    "title": "Class AttachGameObjectsToParticles | Example Unity documentation",
    "keywords": "Class AttachGameObjectsToParticles Inheritance Object AttachGameObjectsToParticles Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AttachGameObjectsToParticles : MonoBehaviour Fields m_Prefab Declaration public GameObject m_Prefab Field Value Type Description GameObject"
  },
  "api/Global.Bullet.html": {
    "href": "api/Global.Bullet.html",
    "title": "Class Bullet | Example Unity documentation",
    "keywords": "Class Bullet classe die beschreibt wie die Bullet fliegt Inheritance Object Bullet Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Bullet : MonoBehaviour Fields body Declaration public Rigidbody2D body Field Value Type Description Rigidbody2D speed Declaration public float speed Field Value Type Description Single waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject waypoints Declaration public List<Vector2> waypoints Field Value Type Description List < Vector2 > Properties BulletDmg Declaration public float BulletDmg { set; } Property Value Type Description Single"
  },
  "api/Global.Bullet_pooling_watcher.html": {
    "href": "api/Global.Bullet_pooling_watcher.html",
    "title": "Class Bullet_pooling_watcher | Example Unity documentation",
    "keywords": "Class Bullet_pooling_watcher �berpr�ft die bulletpooling liste Inheritance Object Bullet_pooling_watcher Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Bullet_pooling_watcher : MonoBehaviour Fields checkTime Declaration public float checkTime Field Value Type Description Single cleanUpTime Declaration public float cleanUpTime Field Value Type Description Single"
  },
  "api/Global.BulletInfo.html": {
    "href": "api/Global.BulletInfo.html",
    "title": "Class BulletInfo | Example Unity documentation",
    "keywords": "Class BulletInfo container classe die Bullets beschreibt Inheritance Object BulletInfo Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class BulletInfo Constructors BulletInfo() standardconstruktor setzt basiswerte Declaration public BulletInfo() BulletInfo(Single, Int32, GameObject, GameObject, GameObject) construktor um werte zu setzten Declaration public BulletInfo(float startRotation, int bulletBaseDmg, GameObject bullet, GameObject startEffect, GameObject sfxSound) Parameters Type Name Description Single startRotation bestimmt die flugrichtung vom basisobject Int32 bulletBaseDmg bestimmt bullet base dmg GameObject bullet bestimmt bullet prefab GameObject startEffect bestimmt particel system start prefab GameObject sfxSound bestimmt Sound Effect prefab Properties AddBaseDmg Declaration public int AddBaseDmg { set; } Property Value Type Description Int32 Bullet Declaration public GameObject Bullet { get; set; } Property Value Type Description GameObject BulletScript Declaration public Bullet BulletScript { set; } Property Value Type Description Bullet DmgModifier Declaration public float DmgModifier { set; } Property Value Type Description Single InstantStartEffect Declaration public GameObject InstantStartEffect { get; set; } Property Value Type Description GameObject SfxSound Declaration public GameObject SfxSound { get; set; } Property Value Type Description GameObject StartEffect Declaration public GameObject StartEffect { get; set; } Property Value Type Description GameObject StartRotation Declaration public float StartRotation { get; set; } Property Value Type Description Single Methods enableEffects() enables the bullet particle effect Declaration public void enableEffects() resetModifiers() resetet die Dmg modifier Declaration public void resetModifiers() setBulletDmg() sets den bullet dmg auf der Bullet Declaration public void setBulletDmg() setLayer(Int32) sets den layer der Bullet Declaration public void setLayer(int layer) Parameters Type Name Description Int32 layer layer in integer"
  },
  "api/Global.CameraScript.html": {
    "href": "api/Global.CameraScript.html",
    "title": "Class CameraScript | Example Unity documentation",
    "keywords": "Class CameraScript camera Movement script Inheritance Object CameraScript Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CameraScript : MonoBehaviour Fields offsetSpeed Declaration public float offsetSpeed Field Value Type Description Single player Declaration public Player player Field Value Type Description Player screenShakeMaxDuration Declaration public float screenShakeMaxDuration Field Value Type Description Single screenShakeMaxMagnitude Declaration public float screenShakeMaxMagnitude Field Value Type Description Single screenShakeMinDuration Declaration public float screenShakeMinDuration Field Value Type Description Single Methods startScreenShake() startet den screen Shake Declaration public IEnumerator startScreenShake() Returns Type Description IEnumerator"
  },
  "api/Global.Controlls.Bullet_hellActions.html": {
    "href": "api/Global.Controlls.Bullet_hellActions.html",
    "title": "Struct Controlls.Bullet_hellActions | Example Unity documentation",
    "keywords": "Struct Controlls.Bullet_hellActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct Bullet_hellActions Constructors Bullet_hellActions(Controlls) Declaration public Bullet_hellActions(Controlls wrapper) Parameters Type Name Description Controlls wrapper Properties doge Declaration public readonly InputAction doge { get; } Property Value Type Description InputAction enabled Declaration public readonly bool enabled { get; } Property Value Type Description Boolean move_down Declaration public readonly InputAction move_down { get; } Property Value Type Description InputAction move_left Declaration public readonly InputAction move_left { get; } Property Value Type Description InputAction move_rigth Declaration public readonly InputAction move_rigth { get; } Property Value Type Description InputAction move_up Declaration public readonly InputAction move_up { get; } Property Value Type Description InputAction pause_menu Declaration public readonly InputAction pause_menu { get; } Property Value Type Description InputAction shoot Declaration public readonly InputAction shoot { get; } Property Value Type Description InputAction Methods Disable() Declaration public void Disable() Enable() Declaration public void Enable() Get() Declaration public InputActionMap Get() Returns Type Description InputActionMap SetCallbacks(Controlls.IBullet_hellActions) Declaration public void SetCallbacks(Controlls.IBullet_hellActions instance) Parameters Type Name Description Controlls.IBullet_hellActions instance Operators Implicit(Controlls.Bullet_hellActions to InputActionMap) Declaration public static implicit operator InputActionMap(Controlls.Bullet_hellActions set) Parameters Type Name Description Controlls.Bullet_hellActions set Returns Type Description InputActionMap"
  },
  "api/Global.Controlls.html": {
    "href": "api/Global.Controlls.html",
    "title": "Class Controlls | Example Unity documentation",
    "keywords": "Class Controlls Inheritance Object Controlls Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Controlls : IInputActionCollection2, IDisposable Constructors Controlls() Declaration public Controlls() Properties asset Declaration public InputActionAsset asset { get; } Property Value Type Description InputActionAsset bindingMask Declaration public InputBinding? bindingMask { get; set; } Property Value Type Description Nullable < InputBinding > bindings Declaration public IEnumerable<InputBinding> bindings { get; } Property Value Type Description IEnumerable < InputBinding > bullet_hell Declaration public Controlls.Bullet_hellActions bullet_hell { get; } Property Value Type Description Controlls.Bullet_hellActions controlSchemes Declaration public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value Type Description ReadOnlyArray < InputControlScheme > devices Declaration public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value Type Description Nullable < ReadOnlyArray < InputDevice >> Methods Contains(InputAction) Declaration public bool Contains(InputAction action) Parameters Type Name Description InputAction action Returns Type Description Boolean Disable() Declaration public void Disable() Dispose() Declaration public void Dispose() Enable() Declaration public void Enable() FindAction(String, Boolean) Declaration public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters Type Name Description String actionNameOrId Boolean throwIfNotFound Returns Type Description InputAction FindBinding(InputBinding, out InputAction) Declaration public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters Type Name Description InputBinding bindingMask InputAction action Returns Type Description Int32 GetEnumerator() Declaration public IEnumerator<InputAction> GetEnumerator() Returns Type Description IEnumerator < InputAction >"
  },
  "api/Global.Controlls.IBullet_hellActions.html": {
    "href": "api/Global.Controlls.IBullet_hellActions.html",
    "title": "Interface Controlls.IBullet_hellActions | Example Unity documentation",
    "keywords": "Interface Controlls.IBullet_hellActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IBullet_hellActions Methods OnDoge(InputAction.CallbackContext) Declaration void OnDoge(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_down(InputAction.CallbackContext) Declaration void OnMove_down(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_left(InputAction.CallbackContext) Declaration void OnMove_left(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_rigth(InputAction.CallbackContext) Declaration void OnMove_rigth(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_up(InputAction.CallbackContext) Declaration void OnMove_up(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPause_menu(InputAction.CallbackContext) Declaration void OnPause_menu(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnShoot(InputAction.CallbackContext) Declaration void OnShoot(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context"
  },
  "api/Global.Enemy.html": {
    "href": "api/Global.Enemy.html",
    "title": "Class Enemy | Example Unity documentation",
    "keywords": "Class Enemy class die enemys beschreibt und deren movement Inheritance Object Enemy Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Enemy : MonoBehaviour Fields body Declaration public Rigidbody2D body Field Value Type Description Rigidbody2D collisionDmg Declaration public int collisionDmg Field Value Type Description Int32 deathParticelSystem Declaration public GameObject deathParticelSystem Field Value Type Description GameObject delayToNextWaypoint Declaration public float delayToNextWaypoint Field Value Type Description Single destoryAfterCollison Declaration public bool destoryAfterCollison Field Value Type Description Boolean followPlayerMovementX Declaration public bool followPlayerMovementX Field Value Type Description Boolean followPlayerMovementY Declaration public bool followPlayerMovementY Field Value Type Description Boolean force Declaration public float force Field Value Type Description Single health Declaration public float health Field Value Type Description Single loop Declaration public bool loop Field Value Type Description Boolean maxDuration Declaration public float maxDuration Field Value Type Description Single maxSpeed Declaration public float maxSpeed Field Value Type Description Single moveToPlayer Declaration public bool moveToPlayer Field Value Type Description Boolean moveToRandomWaypoints Declaration public bool moveToRandomWaypoints Field Value Type Description Boolean playerfollowRange Declaration public float playerfollowRange Field Value Type Description Single waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject waypoints Declaration public List<Vector2> waypoints Field Value Type Description List < Vector2 > Properties SpawnerCallback Declaration public Enemy_Spawner SpawnerCallback { get; set; } Property Value Type Description Enemy_Spawner Methods startMovingOut() startet das rausmoven des gegners, wenn der enemy seine max Duration erreicht hat deactiviert das enemy script Declaration public void startMovingOut() takeDmg(Single) take dmg funktion Declaration public void takeDmg(float dmg) Parameters Type Name Description Single dmg den dmg den der enemy nehmen soll"
  },
  "api/Global.Enemy_skills.html": {
    "href": "api/Global.Enemy_skills.html",
    "title": "Class Enemy_skills | Example Unity documentation",
    "keywords": "Class Enemy_skills verwaltet die skills von enemys Inheritance Object Enemy_skills Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Enemy_skills : MonoBehaviour Fields additionalDmg Declaration public int additionalDmg Field Value Type Description Int32 dmgModifier Declaration public float dmgModifier Field Value Type Description Single shootsToCreate Declaration public int shootsToCreate Field Value Type Description Int32 skillsequenze Declaration public List<Skillsequenze> skillsequenze Field Value Type Description List < Skillsequenze >"
  },
  "api/Global.Enemy_Spawner.html": {
    "href": "api/Global.Enemy_Spawner.html",
    "title": "Class Enemy_Spawner | Example Unity documentation",
    "keywords": "Class Enemy_Spawner classe die das Spawnen von Enemys controlliert Inheritance Object Enemy_Spawner Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Enemy_Spawner : MonoBehaviour Fields delay Declaration public float delay Field Value Type Description Single enemysToSpawn Declaration public List<Enemy_Spawner_Info> enemysToSpawn Field Value Type Description List < Enemy_Spawner_Info > spawnLimit Declaration public int spawnLimit Field Value Type Description Int32 triggerArea Declaration public GameObject triggerArea Field Value Type Description GameObject useTriggerArea Declaration public bool useTriggerArea Field Value Type Description Boolean Methods checkSpawnerActivationTrigger(GameObject) checkt ob der Spawner activiert worden ist und activiert ihn Declaration public bool checkSpawnerActivationTrigger(GameObject trigger) Parameters Type Name Description GameObject trigger trigger area die ausgel�st worden ist Returns Type Description Boolean true, wenn der spawner activiert worden ist checkSpawnTrigger(GameObject) check Spawntimer die auf trigger areas reagiert Declaration public bool checkSpawnTrigger(GameObject trigger) Parameters Type Name Description GameObject trigger trigger area die ausgel�st worden ist Returns Type Description Boolean true, wenn der spawner active ist und der check entgegengenommen wurde spawnKilled() veringert den spawn count nachdem ein enemy zerst�rt worden ist Declaration public void spawnKilled()"
  },
  "api/Global.Enemy_Spawner_Info.html": {
    "href": "api/Global.Enemy_Spawner_Info.html",
    "title": "Class Enemy_Spawner_Info | Example Unity documentation",
    "keywords": "Class Enemy_Spawner_Info container classe f�r Spawner variablen Inheritance Object Enemy_Spawner_Info Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class Enemy_Spawner_Info Constructors Enemy_Spawner_Info() Declaration public Enemy_Spawner_Info() Fields delay Declaration public float delay Field Value Type Description Single enemyPrefab Declaration public GameObject enemyPrefab Field Value Type Description GameObject enemysToSpawn Declaration public int enemysToSpawn Field Value Type Description Int32 triggerArea Declaration public GameObject triggerArea Field Value Type Description GameObject useTriggerArea Declaration public bool useTriggerArea Field Value Type Description Boolean Properties CurrentEnemysSpawned Declaration public int CurrentEnemysSpawned { get; set; } Property Value Type Description Int32 SpawnConditonFulfilled Declaration public bool SpawnConditonFulfilled { get; set; } Property Value Type Description Boolean SpawnStartet Declaration public bool SpawnStartet { get; set; } Property Value Type Description Boolean"
  },
  "api/Global.Globals.html": {
    "href": "api/Global.Globals.html",
    "title": "Class Globals | Example Unity documentation",
    "keywords": "Class Globals classe um Globale Variablen zu verwalten Inheritance Object Globals Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class Globals Fields bulletPool Declaration public static List<Skill> bulletPool Field Value Type Description List < Skill > currentCamera Declaration public static Camera currentCamera Field Value Type Description Camera currentWinCondition Declaration public static Win_condition currentWinCondition Field Value Type Description Win_condition menuHandler Declaration public static Menu_handler menuHandler Field Value Type Description Menu_handler pause Declaration public static bool pause Field Value Type Description Boolean player Declaration public static GameObject player Field Value Type Description GameObject spawnerListe Declaration public static List<Enemy_Spawner> spawnerListe Field Value Type Description List < Enemy_Spawner >"
  },
  "api/Global.Globals_init.html": {
    "href": "api/Global.Globals_init.html",
    "title": "Class Globals_init | Example Unity documentation",
    "keywords": "Class Globals_init classe um Globale variablen zu initzalisieren Inheritance Object Globals_init Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Globals_init : MonoBehaviour"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | Example Unity documentation",
    "keywords": "Namespace Global Classes AttachGameObjectsToParticles Bullet classe die beschreibt wie die Bullet fliegt Bullet_pooling_watcher �berpr�ft die bulletpooling liste BulletInfo container classe die Bullets beschreibt CameraScript camera Movement script Controlls Enemy class die enemys beschreibt und deren movement Enemy_skills verwaltet die skills von enemys Enemy_Spawner classe die das Spawnen von Enemys controlliert Enemy_Spawner_Info container classe f�r Spawner variablen Globals classe um Globale Variablen zu verwalten Globals_init classe um Globale variablen zu initzalisieren LimitFrameRate limitiert die Framerate auf 0 fps Main_menu classe um das main menu zu kontrolieren Menu_handler menu classe um jegliches menu au�er main menu zu verwalten Move_in_out_Scene classe die sich drum k�mmert, dass enemys aus den Spielfeld rein und raus bewegt ParticleControl controliert die Particel system effecte Player classe des Spielers implementiert das Controler Interface Rebinding_menu classe die das Rebinden von controls verwaltet SaveSettings container classe zum speichern von Settings Skill skill class beschreibt wie sich jedes bulletobject auf der classe verh�lt Skillsequenze container classe um skills zu beschreiben SoundControl controlliert die Soundeffecte TriggerCallBack classe um Trigger areas zu machen Waypoint_Designer classe die hilf den Gamedesigner Wegpunktliste zu erzeugen Weapon beschreibt die Waffen des Players Weaponholder classe um die Waffen nach Mouseposition ausrichtet Win_condition win condition handler classe Structs Controlls.Bullet_hellActions Interfaces Controlls.IBullet_hellActions Enums Layer_enum enum f�r Layer Tag_enum enum f�r Tags"
  },
  "api/Global.Layer_enum.html": {
    "href": "api/Global.Layer_enum.html",
    "title": "Enum Layer_enum | Example Unity documentation",
    "keywords": "Enum Layer_enum enum f�r Layer Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Layer_enum Fields Name Description default empty enemy enemy_border enemy_bullets Ignore_Raycast player player_border player_bullets player_immunity TransparentFX ui UI_Overlay water"
  },
  "api/Global.LimitFrameRate.html": {
    "href": "api/Global.LimitFrameRate.html",
    "title": "Class LimitFrameRate | Example Unity documentation",
    "keywords": "Class LimitFrameRate limitiert die Framerate auf 0 fps Inheritance Object LimitFrameRate Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LimitFrameRate : MonoBehaviour"
  },
  "api/Global.Main_menu.html": {
    "href": "api/Global.Main_menu.html",
    "title": "Class Main_menu | Example Unity documentation",
    "keywords": "Class Main_menu classe um das main menu zu kontrolieren Inheritance Object Main_menu Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Main_menu : MonoBehaviour Fields mainMenu Declaration public GameObject mainMenu Field Value Type Description GameObject rebidningMenu Declaration public GameObject rebidningMenu Field Value Type Description GameObject Methods onClickBackToMainMenu() button um das Main menu wieder einzublenden vom Rebinding Menu Declaration public void onClickBackToMainMenu() onClickControls() buttom um das Rebidning Menu einzublenden und das Main menu auszublenden Declaration public void onClickControls() playGame() load the first game Scene Declaration public void playGame() quitGame() quit the game Declaration public void quitGame()"
  },
  "api/Global.Menu_handler.html": {
    "href": "api/Global.Menu_handler.html",
    "title": "Class Menu_handler | Example Unity documentation",
    "keywords": "Class Menu_handler menu classe um jegliches menu au�er main menu zu verwalten Inheritance Object Menu_handler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Menu_handler : MonoBehaviour Fields gameOverUI Declaration public GameObject gameOverUI Field Value Type Description GameObject levelFinishedUI Declaration public GameObject levelFinishedUI Field Value Type Description GameObject levelSelectUI Declaration public GameObject levelSelectUI Field Value Type Description GameObject pauseUI Declaration public GameObject pauseUI Field Value Type Description GameObject shipMenuUI Declaration public GameObject shipMenuUI Field Value Type Description GameObject Methods onClickBack() level select zu ship menu Declaration public void onClickBack() onClickLevelSelect(Int32) level auswahlt Declaration public void onClickLevelSelect(int levelSceneIndex) Parameters Type Name Description Int32 levelSceneIndex level scene index onClickMainMenu(Int32) zu main menu scene Declaration public void onClickMainMenu(int sceneIndex) Parameters Type Name Description Int32 sceneIndex main menu scene index onClickNextLeve(Int32) next level auswahl Declaration public void onClickNextLeve(int backupSeneIndex) Parameters Type Name Description Int32 backupSeneIndex backup scene index falls das next level nicht gibt onClickShipEditor() ship Editor button gelickt Declaration public void onClickShipEditor() onClickShipMenu(Int32) zu ship menu Declaration public void onClickShipMenu(int sceneIndex) Parameters Type Name Description Int32 sceneIndex ship menu scene index onClickTryAgain() scene neu laden Declaration public void onClickTryAgain() onClickWorldSelect() ship menu zu level select Declaration public void onClickWorldSelect() setGameOver() aktiviert das Game Over Menu Declaration public void setGameOver() setLevelFinish() aktiviert das Level Finished Menu Declaration public void setLevelFinish() setPause() aktiviert das Pause Menu Declaration public void setPause() setResume() deaktiviert das Pause Menu Declaration public void setResume()"
  },
  "api/Global.Move_in_out_Scene.html": {
    "href": "api/Global.Move_in_out_Scene.html",
    "title": "Class Move_in_out_Scene | Example Unity documentation",
    "keywords": "Class Move_in_out_Scene classe die sich drum k�mmert, dass enemys aus den Spielfeld rein und raus bewegt Inheritance Object Move_in_out_Scene Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Move_in_out_Scene : MonoBehaviour Fields body Declaration public Rigidbody2D body Field Value Type Description Rigidbody2D force Declaration public float force Field Value Type Description Single maxSpeed Declaration public float maxSpeed Field Value Type Description Single moveInWaypoints Declaration public List<Vector2> moveInWaypoints Field Value Type Description List < Vector2 > moveOutWaypoints Declaration public List<Vector2> moveOutWaypoints Field Value Type Description List < Vector2 > waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject Methods startMoveOut() startet das move out Declaration public void startMoveOut()"
  },
  "api/Global.ParticleControl.html": {
    "href": "api/Global.ParticleControl.html",
    "title": "Class ParticleControl | Example Unity documentation",
    "keywords": "Class ParticleControl controliert die Particel system effecte Inheritance Object ParticleControl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ParticleControl : MonoBehaviour Fields destroyAfterPlay Declaration public bool destroyAfterPlay Field Value Type Description Boolean particle Declaration public ParticleSystem particle Field Value Type Description ParticleSystem"
  },
  "api/Global.Player.html": {
    "href": "api/Global.Player.html",
    "title": "Class Player | Example Unity documentation",
    "keywords": "Class Player classe des Spielers implementiert das Controler Interface Inheritance Object Player Implements Controlls.IBullet_hellActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Player : MonoBehaviour, Controlls.IBullet_hellActions Fields additionalDmg Declaration public int additionalDmg Field Value Type Description Int32 body Declaration public Rigidbody2D body Field Value Type Description Rigidbody2D chargeAudio Declaration public AudioSource chargeAudio Field Value Type Description AudioSource chargeSprites Declaration public List<Sprite> chargeSprites Field Value Type Description List < Sprite > chargeUI Declaration public Image chargeUI Field Value Type Description Image currentschield Declaration public float currentschield Field Value Type Description Single deathEffect Declaration public GameObject deathEffect Field Value Type Description GameObject dmgModifier Declaration public float dmgModifier Field Value Type Description Single dogeCharges Declaration public int dogeCharges Field Value Type Description Int32 dogeCooldown Declaration public float dogeCooldown Field Value Type Description Single dogeRange Declaration public float dogeRange Field Value Type Description Single dogeSpeed Declaration public float dogeSpeed Field Value Type Description Single force Declaration public float force Field Value Type Description Single globalCooldown Declaration public float globalCooldown Field Value Type Description Single health Declaration public float health Field Value Type Description Single healthbar Declaration public Image healthbar Field Value Type Description Image healthbarAbove30 Declaration public Color healthbarAbove30 Field Value Type Description Color healthbarAbove60 Declaration public Color healthbarAbove60 Field Value Type Description Color healthbarBelow30 Declaration public Color healthbarBelow30 Field Value Type Description Color immunityFlickerRate Declaration public float immunityFlickerRate Field Value Type Description Single immunityTimeAfterDoge Declaration public float immunityTimeAfterDoge Field Value Type Description Single immunityTimeAfterHit Declaration public float immunityTimeAfterHit Field Value Type Description Single maxDogeDuration Declaration public float maxDogeDuration Field Value Type Description Single maxFlickerRange Declaration public float maxFlickerRange Field Value Type Description Single maxschield Declaration public float maxschield Field Value Type Description Single maxSpeed Declaration public float maxSpeed Field Value Type Description Single schieldbar Declaration public Image schieldbar Field Value Type Description Image schieldbarStepValue Declaration public float schieldbarStepValue Field Value Type Description Single schieldRefreshRate Declaration public float schieldRefreshRate Field Value Type Description Single schieldRefreshValue Declaration public float schieldRefreshValue Field Value Type Description Single ship Declaration public GameObject ship Field Value Type Description GameObject waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject weapons Declaration public List<Weapon> weapons Field Value Type Description List < Weapon > Properties Impulse Declaration public Vector2 Impulse { get; } Property Value Type Description Vector2 Methods clearControlls() destroys den controller input Declaration public void clearControlls() OnDoge(InputAction.CallbackContext) controler action f�r den doge befehl Declaration public void OnDoge(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_down(InputAction.CallbackContext) controler action f�r den move down befehl Declaration public void OnMove_down(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_left(InputAction.CallbackContext) controler action f�r den move left befehl Declaration public void OnMove_left(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_rigth(InputAction.CallbackContext) controler action f�r den move right befehl Declaration public void OnMove_rigth(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_up(InputAction.CallbackContext) controler action f�r den move up befehl Declaration public void OnMove_up(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPause_menu(InputAction.CallbackContext) controler action f�r das Pause Menu Declaration public void OnPause_menu(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnShoot(InputAction.CallbackContext) controler action f�r den shoot befehl Declaration public void OnShoot(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context schieldRefresh(Single) corutine die das Schild aufl�d Declaration public IEnumerator schieldRefresh(float wait) Parameters Type Name Description Single wait Zeit zwischen den Schild wert erh�hungen Returns Type Description IEnumerator smoothHealthDrop() corutine die langsam das leben dropt, wenn man schaden genommen hat, damit das leben fl�ssig nach unten geht Declaration public IEnumerator smoothHealthDrop() Returns Type Description IEnumerator smoothSchieldDrop() gleich wie beim healthdrop nur f�rs schild Declaration public IEnumerator smoothSchieldDrop() Returns Type Description IEnumerator takeDmg(Single) take dmg funktion Declaration public void takeDmg(float dmg) Parameters Type Name Description Single dmg den dmg den der player nehmen soll Implements Controlls.IBullet_hellActions"
  },
  "api/Global.Rebinding_menu.html": {
    "href": "api/Global.Rebinding_menu.html",
    "title": "Class Rebinding_menu | Example Unity documentation",
    "keywords": "Class Rebinding_menu classe die das Rebinden von controls verwaltet Inheritance Object Rebinding_menu Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Rebinding_menu : MonoBehaviour Fields actionKeybind Declaration public GameObject actionKeybind Field Value Type Description GameObject actionName Declaration public GameObject actionName Field Value Type Description GameObject buttonBack Declaration public GameObject buttonBack Field Value Type Description GameObject buttonDefault Declaration public GameObject buttonDefault Field Value Type Description GameObject buttonRebind Declaration public GameObject buttonRebind Field Value Type Description GameObject buttonSave Declaration public GameObject buttonSave Field Value Type Description GameObject itemHolder Declaration public GameObject itemHolder Field Value Type Description GameObject saveAlert Declaration public GameObject saveAlert Field Value Type Description GameObject ScrollView Declaration public GameObject ScrollView Field Value Type Description GameObject Methods loadRebinding(Controlls) ladet die Rebinds in den controller rein Declaration public Controlls loadRebinding(Controlls cont) Parameters Type Name Description Controlls cont der controlls auf den die Rebinds gesetzt werden sollen Returns Type Description Controlls gibt den controller zur�ck auf den die Rebinds gesetzt wurden onClickAlertButton() schlie�t das Alert Fenster, wenn das Speichern nicht erfolgreich war Declaration public void onClickAlertButton() saveRebinding() speichert das Rebinding in einer json datei Userspezifisch auf dem PC es darf auch nur gespeichert werden, wenn alle rebinds eindeutig sind Declaration public void saveRebinding()"
  },
  "api/Global.SaveSettings.html": {
    "href": "api/Global.SaveSettings.html",
    "title": "Class SaveSettings | Example Unity documentation",
    "keywords": "Class SaveSettings container classe zum speichern von Settings Inheritance Object SaveSettings Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class SaveSettings Constructors SaveSettings(Boolean, Single, Single) standard consturktor Declaration public SaveSettings(bool isMute, float backgroundVolume, float sfxVolume) Parameters Type Name Description Boolean isMute setzt mute button Single backgroundVolume setzt background Volume 0-1 Single sfxVolume setzt sfx Volume 0-1 Properties BackgroundVolume Declaration public float BackgroundVolume { get; set; } Property Value Type Description Single IsMute Declaration public bool IsMute { get; set; } Property Value Type Description Boolean SfxVolume Declaration public float SfxVolume { get; set; } Property Value Type Description Single Methods loadSettings() ladet die Settings aus einer gespeicherten Datei, wenn vorhanden Declaration public static SaveSettings loadSettings() Returns Type Description SaveSettings gibt die gespeicherten Settings zur�ck savingSetting() speichert die Settings Declaration public void savingSetting()"
  },
  "api/Global.Skill.html": {
    "href": "api/Global.Skill.html",
    "title": "Class Skill | Example Unity documentation",
    "keywords": "Class Skill skill class beschreibt wie sich jedes bulletobject auf der classe verh�lt Inheritance Object Skill Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Skill : MonoBehaviour Fields bulletInfoList Declaration public List<BulletInfo> bulletInfoList Field Value Type Description List < BulletInfo > maxDuration Declaration public int maxDuration Field Value Type Description Int32 Properties Timestamp Declaration public float Timestamp { get; set; } Property Value Type Description Single Methods checkDisabled() checkt ob alle child objecte inactive sind, um den skill zu deactivieren wird aufgerufen, wenn eine bullet sich deactiviert Declaration public void checkDisabled() layerChange() �ndern des Layers der Bullets falls sich der Layer des skills �ndern sollte Declaration public void layerChange() setDmgModifiers(Int32, Single) setzt modifiers auf die bullet. Declaration public void setDmgModifiers(int additionalDmg, float dmgModifier) Parameters Type Name Description Int32 additionalDmg erh�hten den schaden der bullet direkt �ber diesen Wert Single dmgModifier nach hinzuf�gen des additionalDmg modifiers wir der dmg mit diesem Wert multipliziert"
  },
  "api/Global.Skillsequenze.html": {
    "href": "api/Global.Skillsequenze.html",
    "title": "Class Skillsequenze | Example Unity documentation",
    "keywords": "Class Skillsequenze container classe um skills zu beschreiben Inheritance Object Skillsequenze Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class Skillsequenze Constructors Skillsequenze(Single, GameObject) construktor classe Declaration public Skillsequenze(float delay, GameObject skill) Parameters Type Name Description Single delay delay zwischen den skills GameObject skill den skill der benutzt wird Properties Delay Declaration public float Delay { get; } Property Value Type Description Single Skill Declaration public GameObject Skill { get; } Property Value Type Description GameObject"
  },
  "api/Global.SoundControl.html": {
    "href": "api/Global.SoundControl.html",
    "title": "Class SoundControl | Example Unity documentation",
    "keywords": "Class SoundControl controlliert die Soundeffecte Inheritance Object SoundControl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SoundControl : MonoBehaviour Fields background Declaration public AudioMixerGroup background Field Value Type Description AudioMixerGroup backgroundSlider Declaration public Slider backgroundSlider Field Value Type Description Slider masterGroup Declaration public AudioMixerGroup masterGroup Field Value Type Description AudioMixerGroup mute Declaration public AudioMixerSnapshot mute Field Value Type Description AudioMixerSnapshot muteButton Declaration public Image muteButton Field Value Type Description Image muteSp Declaration public Sprite muteSp Field Value Type Description Sprite normal Declaration public AudioMixerSnapshot normal Field Value Type Description AudioMixerSnapshot sfx Declaration public AudioMixerGroup sfx Field Value Type Description AudioMixerGroup sfxSlider Declaration public Slider sfxSlider Field Value Type Description Slider unMuteSp Declaration public Sprite unMuteSp Field Value Type Description Sprite Methods backgroundSoundChange() setzt den backgroundsound nach �ndern des Sliders Declaration public void backgroundSoundChange() saveSettingChanges() speichert die Soundsettings Declaration public void saveSettingChanges() setStartSettings() setzt die geladen Settings auf die UI und stellt die Soundgroups ein Declaration public void setStartSettings() sfxChanged() setzt den sfx Sound nach �ndern des Sliders Declaration public void sfxChanged() toggleMute() toggelt den Mute button Declaration public void toggleMute()"
  },
  "api/Global.Tag_enum.html": {
    "href": "api/Global.Tag_enum.html",
    "title": "Enum Tag_enum | Example Unity documentation",
    "keywords": "Enum Tag_enum enum f�r Tags Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Tag_enum Fields Name Description bullet_border enemy_border player_border"
  },
  "api/Global.TriggerCallBack.html": {
    "href": "api/Global.TriggerCallBack.html",
    "title": "Class TriggerCallBack | Example Unity documentation",
    "keywords": "Class TriggerCallBack classe um Trigger areas zu machen Inheritance Object TriggerCallBack Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TriggerCallBack : MonoBehaviour Fields spawnerActivationTrigger Declaration public bool spawnerActivationTrigger Field Value Type Description Boolean spawnTrigger Declaration public bool spawnTrigger Field Value Type Description Boolean"
  },
  "api/Global.Waypoint_Designer.html": {
    "href": "api/Global.Waypoint_Designer.html",
    "title": "Class Waypoint_Designer | Example Unity documentation",
    "keywords": "Class Waypoint_Designer classe die hilf den Gamedesigner Wegpunktliste zu erzeugen Inheritance Object Waypoint_Designer Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Waypoint_Designer : MonoBehaviour Fields enemyDelayToNextWaypoint Declaration public float enemyDelayToNextWaypoint Field Value Type Description Single force Declaration public float force Field Value Type Description Single line Declaration public LineRenderer line Field Value Type Description LineRenderer loop Declaration public bool loop Field Value Type Description Boolean restartAfter Declaration public float restartAfter Field Value Type Description Single speed Declaration public float speed Field Value Type Description Single waypointList Declaration public List<GameObject> waypointList Field Value Type Description List < GameObject > waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject waypoints Declaration public List<Vector2> waypoints Field Value Type Description List < Vector2 > Methods paintWayoints() aktiviert die Wegpunkt setzung Declaration public void paintWayoints()"
  },
  "api/Global.Weapon.html": {
    "href": "api/Global.Weapon.html",
    "title": "Class Weapon | Example Unity documentation",
    "keywords": "Class Weapon beschreibt die Waffen des Players Inheritance Object Weapon Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Weapon : MonoBehaviour Fields additionalDmg Declaration public int additionalDmg Field Value Type Description Int32 dmgModifier Declaration public float dmgModifier Field Value Type Description Single reloadTime Declaration public float reloadTime Field Value Type Description Single shootsToCreate Declaration public int shootsToCreate Field Value Type Description Int32 skill Declaration public GameObject skill Field Value Type Description GameObject Methods activateSkill(Boolean) erzeugt Skills und setzt diese auf die Richtige position und activiert diese pr�ft vor erzeugung neuer Skills ob diese im bulletpool sind kann auch Skills im voraus erzeugen, dort wird die Position nicht gesetzt Declaration public GameObject activateSkill(bool preCreation) Parameters Type Name Description Boolean preCreation wenn dieser wert True ist, dann werden Skills im voraus erzeugt Returns Type Description GameObject Gameobject vom Skill shoot(Int32, Single) Erzeugung der Skill objecten mit dmg Modifiern, wenn die Waffe schie�en kann Declaration public void shoot(int additionalDmg, float dmgModifier) Parameters Type Name Description Int32 additionalDmg erh�hten den schaden der bullet direkt �ber diesen Wert Single dmgModifier nach hinzuf�gen des additionalDmg modifiers wir der dmg mit diesem Wert multipliziert"
  },
  "api/Global.Weaponholder.html": {
    "href": "api/Global.Weaponholder.html",
    "title": "Class Weaponholder | Example Unity documentation",
    "keywords": "Class Weaponholder classe um die Waffen nach Mouseposition ausrichtet Inheritance Object Weaponholder Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Weaponholder : MonoBehaviour Fields rotationSpeed Declaration public float rotationSpeed Field Value Type Description Single"
  },
  "api/Global.Win_condition.html": {
    "href": "api/Global.Win_condition.html",
    "title": "Class Win_condition | Example Unity documentation",
    "keywords": "Class Win_condition win condition handler classe Inheritance Object Win_condition Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Win_condition : MonoBehaviour Fields boxcollider Declaration public BoxCollider2D boxcollider Field Value Type Description BoxCollider2D enemysToKill Declaration public int enemysToKill Field Value Type Description Int32 sp Declaration public SpriteRenderer sp Field Value Type Description SpriteRenderer Methods activateLevelFinishPortal() activiert das level end portal Declaration public void activateLevelFinishPortal() enemyKilled() erh�ht der enemy kill counter um 1 Declaration public void enemyKilled()"
  }
}
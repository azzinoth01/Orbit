{
  "api/Global.AnimatorState.html": {
    "href": "api/Global.AnimatorState.html",
    "title": "Class AnimatorState | Example Unity documentation",
    "keywords": "Class AnimatorState animator state control Inheritance Object AnimatorState Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AnimatorState : StateMachineBehaviour Methods OnStateMachineExit(Animator, Int32) disables the animator when the exit node is entered Declaration public override void OnStateMachineExit(Animator animator, int stateMachinePathHash) Parameters Type Name Description Animator animator the animator of the animation Int32 stateMachinePathHash not used"
  },
  "api/Global.AttachGameObjectsToParticles.html": {
    "href": "api/Global.AttachGameObjectsToParticles.html",
    "title": "Class AttachGameObjectsToParticles | Example Unity documentation",
    "keywords": "Class AttachGameObjectsToParticles not in use anymore Inheritance Object AttachGameObjectsToParticles Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AttachGameObjectsToParticles : MonoBehaviour Fields m_Prefab Declaration public GameObject m_Prefab Field Value Type Description GameObject"
  },
  "api/Global.Bullet.html": {
    "href": "api/Global.Bullet.html",
    "title": "Class Bullet | Example Unity documentation",
    "keywords": "Class Bullet class that describes how bullets fly Inheritance Object Bullet Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Bullet : MonoBehaviour Fields body Declaration public Rigidbody2D body Field Value Type Description Rigidbody2D speed Declaration public float speed Field Value Type Description Single waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject waypoints Declaration public List<Vector2> waypoints Field Value Type Description List < Vector2 > Properties BulletDmg Declaration public float BulletDmg { set; } Property Value Type Description Single"
  },
  "api/Global.Bullet_pooling_watcher.html": {
    "href": "api/Global.Bullet_pooling_watcher.html",
    "title": "Class Bullet_pooling_watcher | Example Unity documentation",
    "keywords": "Class Bullet_pooling_watcher checks the bulletpooling list Inheritance Object Bullet_pooling_watcher Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Bullet_pooling_watcher : MonoBehaviour Fields checkTime Declaration public float checkTime Field Value Type Description Single cleanUpTime Declaration public float cleanUpTime Field Value Type Description Single"
  },
  "api/Global.BulletInfo.html": {
    "href": "api/Global.BulletInfo.html",
    "title": "Class BulletInfo | Example Unity documentation",
    "keywords": "Class BulletInfo container class to describe the bullets Inheritance Object BulletInfo Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class BulletInfo Constructors BulletInfo() standardconstuctor sets the basevalues Declaration public BulletInfo() BulletInfo(Single, Single, GameObject, GameObject, GameObject) constructor to set values Declaration public BulletInfo(float startRotation, float bulletBaseDmg, GameObject bullet, GameObject startEffect, GameObject sfxSound) Parameters Type Name Description Single startRotation describes the flying direction of the baseobject Single bulletBaseDmg describes the base dmg of the bullet GameObject bullet bullet prefab GameObject startEffect particel system effect prefab GameObject sfxSound sound effect prefab Properties AddBaseDmg Declaration public float AddBaseDmg { set; } Property Value Type Description Single Bullet Declaration public GameObject Bullet { get; set; } Property Value Type Description GameObject BulletBaseDmg Declaration public float BulletBaseDmg { get; } Property Value Type Description Single BulletScript Declaration public Bullet BulletScript { set; } Property Value Type Description Bullet DmgModifier Declaration public float DmgModifier { set; } Property Value Type Description Single InstantStartEffect Declaration public GameObject InstantStartEffect { get; set; } Property Value Type Description GameObject SfxSound Declaration public GameObject SfxSound { get; set; } Property Value Type Description GameObject StartEffect Declaration public GameObject StartEffect { get; set; } Property Value Type Description GameObject StartRotation Declaration public float StartRotation { get; set; } Property Value Type Description Single Methods enableEffects() enables the bullet particle effect Declaration public void enableEffects() resetModifiers() resets the dmg modifiers Declaration public void resetModifiers() setBulletDmg() sets the bullet dmg on the bullet Declaration public void setBulletDmg() setLayer(Int32) sets den layer der Bullet sets the layer of the bullet (Layer_enum.player_bullets or Layer_enum.enemy_bullets) Declaration public void setLayer(int layer) Parameters Type Name Description Int32 layer layer in integer (use Layer_enum)"
  },
  "api/Global.BulletSoundControl.html": {
    "href": "api/Global.BulletSoundControl.html",
    "title": "Class BulletSoundControl | Example Unity documentation",
    "keywords": "Class BulletSoundControl controls the audio of the bullets Inheritance Object BulletSoundControl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class BulletSoundControl : MonoBehaviour Fields audios Declaration public AudioSource audios Field Value Type Description AudioSource"
  },
  "api/Global.CameraScript.html": {
    "href": "api/Global.CameraScript.html",
    "title": "Class CameraScript | Example Unity documentation",
    "keywords": "Class CameraScript camera movement script Inheritance Object CameraScript Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CameraScript : MonoBehaviour Fields offsetSpeed Declaration public float offsetSpeed Field Value Type Description Single player Declaration public Player player Field Value Type Description Player screenShakeMaxDuration Declaration public float screenShakeMaxDuration Field Value Type Description Single screenShakeMaxMagnitude Declaration public float screenShakeMaxMagnitude Field Value Type Description Single screenShakeMinDuration Declaration public float screenShakeMinDuration Field Value Type Description Single Methods startScreenShake() starts the screen shake Declaration public IEnumerator startScreenShake() Returns Type Description IEnumerator"
  },
  "api/Global.CheckLevelUnlock.html": {
    "href": "api/Global.CheckLevelUnlock.html",
    "title": "Class CheckLevelUnlock | Example Unity documentation",
    "keywords": "Class CheckLevelUnlock checks if certain levels are already unlocked Inheritance Object CheckLevelUnlock Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CheckLevelUnlock : MonoBehaviour"
  },
  "api/Global.Control_schemes_enum.html": {
    "href": "api/Global.Control_schemes_enum.html",
    "title": "Enum Control_schemes_enum | Example Unity documentation",
    "keywords": "Enum Control_schemes_enum the enum names for the supported controls Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Control_schemes_enum Fields Name Description gamepad mouseAndKeyboard"
  },
  "api/Global.Controlls.Bullet_hellActions.html": {
    "href": "api/Global.Controlls.Bullet_hellActions.html",
    "title": "Struct Controlls.Bullet_hellActions | Example Unity documentation",
    "keywords": "Struct Controlls.Bullet_hellActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct Bullet_hellActions Constructors Bullet_hellActions(Controlls) Declaration public Bullet_hellActions(Controlls wrapper) Parameters Type Name Description Controlls wrapper Properties doge Declaration public readonly InputAction doge { get; } Property Value Type Description InputAction enabled Declaration public readonly bool enabled { get; } Property Value Type Description Boolean move_down Declaration public readonly InputAction move_down { get; } Property Value Type Description InputAction move_left Declaration public readonly InputAction move_left { get; } Property Value Type Description InputAction move_rigth Declaration public readonly InputAction move_rigth { get; } Property Value Type Description InputAction move_up Declaration public readonly InputAction move_up { get; } Property Value Type Description InputAction pause_menu Declaration public readonly InputAction pause_menu { get; } Property Value Type Description InputAction shoot Declaration public readonly InputAction shoot { get; } Property Value Type Description InputAction Methods Disable() Declaration public void Disable() Enable() Declaration public void Enable() Get() Declaration public InputActionMap Get() Returns Type Description InputActionMap SetCallbacks(Controlls.IBullet_hellActions) Declaration public void SetCallbacks(Controlls.IBullet_hellActions instance) Parameters Type Name Description Controlls.IBullet_hellActions instance Operators Implicit(Controlls.Bullet_hellActions to InputActionMap) Declaration public static implicit operator InputActionMap(Controlls.Bullet_hellActions set) Parameters Type Name Description Controlls.Bullet_hellActions set Returns Type Description InputActionMap"
  },
  "api/Global.Controlls.html": {
    "href": "api/Global.Controlls.html",
    "title": "Class Controlls | Example Unity documentation",
    "keywords": "Class Controlls Inheritance Object Controlls Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Controlls : IInputActionCollection2, IDisposable Constructors Controlls() Declaration public Controlls() Properties asset Declaration public InputActionAsset asset { get; } Property Value Type Description InputActionAsset bindingMask Declaration public InputBinding? bindingMask { get; set; } Property Value Type Description Nullable < InputBinding > bindings Declaration public IEnumerable<InputBinding> bindings { get; } Property Value Type Description IEnumerable < InputBinding > bullet_hell Declaration public Controlls.Bullet_hellActions bullet_hell { get; } Property Value Type Description Controlls.Bullet_hellActions controlSchemes Declaration public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value Type Description ReadOnlyArray < InputControlScheme > devices Declaration public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value Type Description Nullable < ReadOnlyArray < InputDevice >> gamepadScheme Declaration public InputControlScheme gamepadScheme { get; } Property Value Type Description InputControlScheme mouseAndKeyboardScheme Declaration public InputControlScheme mouseAndKeyboardScheme { get; } Property Value Type Description InputControlScheme UI Declaration public Controlls.UIActions UI { get; } Property Value Type Description Controlls.UIActions VirtualMouse Declaration public Controlls.VirtualMouseActions VirtualMouse { get; } Property Value Type Description Controlls.VirtualMouseActions Methods Contains(InputAction) Declaration public bool Contains(InputAction action) Parameters Type Name Description InputAction action Returns Type Description Boolean Disable() Declaration public void Disable() Dispose() Declaration public void Dispose() Enable() Declaration public void Enable() FindAction(String, Boolean) Declaration public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters Type Name Description String actionNameOrId Boolean throwIfNotFound Returns Type Description InputAction FindBinding(InputBinding, out InputAction) Declaration public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters Type Name Description InputBinding bindingMask InputAction action Returns Type Description Int32 GetEnumerator() Declaration public IEnumerator<InputAction> GetEnumerator() Returns Type Description IEnumerator < InputAction >"
  },
  "api/Global.Controlls.IBullet_hellActions.html": {
    "href": "api/Global.Controlls.IBullet_hellActions.html",
    "title": "Interface Controlls.IBullet_hellActions | Example Unity documentation",
    "keywords": "Interface Controlls.IBullet_hellActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IBullet_hellActions Methods OnDoge(InputAction.CallbackContext) Declaration void OnDoge(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_down(InputAction.CallbackContext) Declaration void OnMove_down(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_left(InputAction.CallbackContext) Declaration void OnMove_left(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_rigth(InputAction.CallbackContext) Declaration void OnMove_rigth(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_up(InputAction.CallbackContext) Declaration void OnMove_up(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPause_menu(InputAction.CallbackContext) Declaration void OnPause_menu(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnShoot(InputAction.CallbackContext) Declaration void OnShoot(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context"
  },
  "api/Global.Controlls.IUIActions.html": {
    "href": "api/Global.Controlls.IUIActions.html",
    "title": "Interface Controlls.IUIActions | Example Unity documentation",
    "keywords": "Interface Controlls.IUIActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IUIActions Methods OnCancel(InputAction.CallbackContext) Declaration void OnCancel(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnClick(InputAction.CallbackContext) Declaration void OnClick(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMiddleClick(InputAction.CallbackContext) Declaration void OnMiddleClick(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnNavigate(InputAction.CallbackContext) Declaration void OnNavigate(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPoint(InputAction.CallbackContext) Declaration void OnPoint(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRightClick(InputAction.CallbackContext) Declaration void OnRightClick(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnScrollWheel(InputAction.CallbackContext) Declaration void OnScrollWheel(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnSubmit(InputAction.CallbackContext) Declaration void OnSubmit(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTrackedDeviceOrientation(InputAction.CallbackContext) Declaration void OnTrackedDeviceOrientation(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTrackedDevicePosition(InputAction.CallbackContext) Declaration void OnTrackedDevicePosition(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context"
  },
  "api/Global.Controlls.IVirtualMouseActions.html": {
    "href": "api/Global.Controlls.IVirtualMouseActions.html",
    "title": "Interface Controlls.IVirtualMouseActions | Example Unity documentation",
    "keywords": "Interface Controlls.IVirtualMouseActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IVirtualMouseActions Methods OnLeftMouseButton(InputAction.CallbackContext) Declaration void OnLeftMouseButton(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMiddleMouseButton(InputAction.CallbackContext) Declaration void OnMiddleMouseButton(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMoveCursor(InputAction.CallbackContext) Declaration void OnMoveCursor(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPoint(InputAction.CallbackContext) Declaration void OnPoint(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRightMouseButton(InputAction.CallbackContext) Declaration void OnRightMouseButton(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnScroll(InputAction.CallbackContext) Declaration void OnScroll(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnToogleMouseVisibility(InputAction.CallbackContext) Declaration void OnToogleMouseVisibility(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context"
  },
  "api/Global.Controlls.UIActions.html": {
    "href": "api/Global.Controlls.UIActions.html",
    "title": "Struct Controlls.UIActions | Example Unity documentation",
    "keywords": "Struct Controlls.UIActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct UIActions Constructors UIActions(Controlls) Declaration public UIActions(Controlls wrapper) Parameters Type Name Description Controlls wrapper Properties Cancel Declaration public readonly InputAction Cancel { get; } Property Value Type Description InputAction Click Declaration public readonly InputAction Click { get; } Property Value Type Description InputAction enabled Declaration public readonly bool enabled { get; } Property Value Type Description Boolean MiddleClick Declaration public readonly InputAction MiddleClick { get; } Property Value Type Description InputAction Navigate Declaration public readonly InputAction Navigate { get; } Property Value Type Description InputAction Point Declaration public readonly InputAction Point { get; } Property Value Type Description InputAction RightClick Declaration public readonly InputAction RightClick { get; } Property Value Type Description InputAction ScrollWheel Declaration public readonly InputAction ScrollWheel { get; } Property Value Type Description InputAction Submit Declaration public readonly InputAction Submit { get; } Property Value Type Description InputAction TrackedDeviceOrientation Declaration public readonly InputAction TrackedDeviceOrientation { get; } Property Value Type Description InputAction TrackedDevicePosition Declaration public readonly InputAction TrackedDevicePosition { get; } Property Value Type Description InputAction Methods Disable() Declaration public void Disable() Enable() Declaration public void Enable() Get() Declaration public InputActionMap Get() Returns Type Description InputActionMap SetCallbacks(Controlls.IUIActions) Declaration public void SetCallbacks(Controlls.IUIActions instance) Parameters Type Name Description Controlls.IUIActions instance Operators Implicit(Controlls.UIActions to InputActionMap) Declaration public static implicit operator InputActionMap(Controlls.UIActions set) Parameters Type Name Description Controlls.UIActions set Returns Type Description InputActionMap"
  },
  "api/Global.Controlls.VirtualMouseActions.html": {
    "href": "api/Global.Controlls.VirtualMouseActions.html",
    "title": "Struct Controlls.VirtualMouseActions | Example Unity documentation",
    "keywords": "Struct Controlls.VirtualMouseActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct VirtualMouseActions Constructors VirtualMouseActions(Controlls) Declaration public VirtualMouseActions(Controlls wrapper) Parameters Type Name Description Controlls wrapper Properties enabled Declaration public readonly bool enabled { get; } Property Value Type Description Boolean leftMouseButton Declaration public readonly InputAction leftMouseButton { get; } Property Value Type Description InputAction middleMouseButton Declaration public readonly InputAction middleMouseButton { get; } Property Value Type Description InputAction moveCursor Declaration public readonly InputAction moveCursor { get; } Property Value Type Description InputAction point Declaration public readonly InputAction point { get; } Property Value Type Description InputAction rightMouseButton Declaration public readonly InputAction rightMouseButton { get; } Property Value Type Description InputAction scroll Declaration public readonly InputAction scroll { get; } Property Value Type Description InputAction toogleMouseVisibility Declaration public readonly InputAction toogleMouseVisibility { get; } Property Value Type Description InputAction Methods Disable() Declaration public void Disable() Enable() Declaration public void Enable() Get() Declaration public InputActionMap Get() Returns Type Description InputActionMap SetCallbacks(Controlls.IVirtualMouseActions) Declaration public void SetCallbacks(Controlls.IVirtualMouseActions instance) Parameters Type Name Description Controlls.IVirtualMouseActions instance Operators Implicit(Controlls.VirtualMouseActions to InputActionMap) Declaration public static implicit operator InputActionMap(Controlls.VirtualMouseActions set) Parameters Type Name Description Controlls.VirtualMouseActions set Returns Type Description InputActionMap"
  },
  "api/Global.CustomButton.html": {
    "href": "api/Global.CustomButton.html",
    "title": "Class CustomButton | Example Unity documentation",
    "keywords": "Class CustomButton creates custom button shapes Inheritance Object CustomButton Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CustomButton : MonoBehaviour Fields buttonimage Declaration public Image buttonimage Field Value Type Description Image"
  },
  "api/Global.Enemy.html": {
    "href": "api/Global.Enemy.html",
    "title": "Class Enemy | Example Unity documentation",
    "keywords": "Class Enemy class describes enemys and their movement Inheritance Object Enemy Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Enemy : MonoBehaviour Fields body Declaration public Rigidbody2D body Field Value Type Description Rigidbody2D bossHp Declaration public Image bossHp Field Value Type Description Image bossUI Declaration public GameObject bossUI Field Value Type Description GameObject collisionDmg Declaration public int collisionDmg Field Value Type Description Int32 deathParticelSystem Declaration public GameObject deathParticelSystem Field Value Type Description GameObject delayToNextWaypoint Declaration public float delayToNextWaypoint Field Value Type Description Single destoryAfterCollison Declaration public bool destoryAfterCollison Field Value Type Description Boolean doNotCountAsKill Declaration public bool doNotCountAsKill Field Value Type Description Boolean doNotUseForceToMove Declaration public bool doNotUseForceToMove Field Value Type Description Boolean enemyHitSound Declaration public AudioSource enemyHitSound Field Value Type Description AudioSource followPlayerMovementX Declaration public bool followPlayerMovementX Field Value Type Description Boolean followPlayerMovementY Declaration public bool followPlayerMovementY Field Value Type Description Boolean force Declaration public float force Field Value Type Description Single health Declaration public float health Field Value Type Description Single loop Declaration public bool loop Field Value Type Description Boolean maxDuration Declaration public float maxDuration Field Value Type Description Single maxMonyeValue Declaration public int maxMonyeValue Field Value Type Description Int32 maxSpeed Declaration public float maxSpeed Field Value Type Description Single minMoneyValue Declaration public int minMoneyValue Field Value Type Description Int32 moveToPlayer Declaration public bool moveToPlayer Field Value Type Description Boolean moveToRandomWaypoints Declaration public bool moveToRandomWaypoints Field Value Type Description Boolean playerfollowRange Declaration public float playerfollowRange Field Value Type Description Single showBossHp Declaration public bool showBossHp Field Value Type Description Boolean waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject waypoints Declaration public List<Vector2> waypoints Field Value Type Description List < Vector2 > Properties MaxHealth Declaration public float MaxHealth { get; set; } Property Value Type Description Single SpawnerCallback Declaration public Enemy_Spawner SpawnerCallback { get; set; } Property Value Type Description Enemy_Spawner Methods startMovingOut() starts the move out of this enemy if the enemy has reached its max duration deaactivates the enemy script Declaration public void startMovingOut() takeDmg(Single) take dmg function Declaration public void takeDmg(float dmg) Parameters Type Name Description Single dmg dmg the enemy takes"
  },
  "api/Global.Enemy_rotation.html": {
    "href": "api/Global.Enemy_rotation.html",
    "title": "Class Enemy_rotation | Example Unity documentation",
    "keywords": "Class Enemy_rotation controls the enemy rotation Inheritance Object Enemy_rotation Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Enemy_rotation : MonoBehaviour Fields activatedAfterMoveIn Declaration public bool activatedAfterMoveIn Field Value Type Description Boolean rotateSpeed Declaration public float rotateSpeed Field Value Type Description Single rotateTowardsPlayer Declaration public bool rotateTowardsPlayer Field Value Type Description Boolean"
  },
  "api/Global.Enemy_skills.html": {
    "href": "api/Global.Enemy_skills.html",
    "title": "Class Enemy_skills | Example Unity documentation",
    "keywords": "Class Enemy_skills manages the skills of the enemy Inheritance Object Enemy_skills Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Enemy_skills : MonoBehaviour Fields additionalDmg Declaration public float additionalDmg Field Value Type Description Single dmgModifier Declaration public float dmgModifier Field Value Type Description Single doNotDeactivate Declaration public bool doNotDeactivate Field Value Type Description Boolean shootsToCreate Declaration public int shootsToCreate Field Value Type Description Int32 skillsequenze Declaration public List<Skillsequenze> skillsequenze Field Value Type Description List < Skillsequenze >"
  },
  "api/Global.Enemy_Spawner.html": {
    "href": "api/Global.Enemy_Spawner.html",
    "title": "Class Enemy_Spawner | Example Unity documentation",
    "keywords": "Class Enemy_Spawner class to control the spawning of enemys Inheritance Object Enemy_Spawner Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Enemy_Spawner : MonoBehaviour Fields delay Declaration public float delay Field Value Type Description Single enemysToSpawn Declaration public List<Enemy_Spawner_Info> enemysToSpawn Field Value Type Description List < Enemy_Spawner_Info > modifyAddDmg Declaration public float modifyAddDmg Field Value Type Description Single modifyAddHealth Declaration public float modifyAddHealth Field Value Type Description Single modifyDoNotUseForce Declaration public bool modifyDoNotUseForce Field Value Type Description Boolean modifyMoveIn Declaration public List<Vector2> modifyMoveIn Field Value Type Description List < Vector2 > modifyMoveOut Declaration public List<Vector2> modifyMoveOut Field Value Type Description List < Vector2 > modifyWaypoints Declaration public List<Vector2> modifyWaypoints Field Value Type Description List < Vector2 > spawnLimit Declaration public int spawnLimit Field Value Type Description Int32 triggerArea Declaration public GameObject triggerArea Field Value Type Description GameObject useModification Declaration public bool useModification Field Value Type Description Boolean useRandomSpawnInfo Declaration public bool useRandomSpawnInfo Field Value Type Description Boolean useTriggerArea Declaration public bool useTriggerArea Field Value Type Description Boolean waveSpawner Declaration public bool waveSpawner Field Value Type Description Boolean Methods checkSpawnerActivationTrigger(GameObject) starts the activation of the spawner Declaration public bool checkSpawnerActivationTrigger(GameObject trigger) Parameters Type Name Description GameObject trigger trigger area who got triggerd Returns Type Description Boolean true if spawner activation was started. false if the spawner is already active checkSpawnTrigger(GameObject) check spawntimer who react to trigger areas Declaration public bool checkSpawnTrigger(GameObject trigger) Parameters Type Name Description GameObject trigger trigger area who got triggerd Returns Type Description Boolean true if the spawner is active and the check was accepted spawnKilled() reduce the spawn count after a enemy was killed Declaration public void spawnKilled()"
  },
  "api/Global.Enemy_Spawner_Info.html": {
    "href": "api/Global.Enemy_Spawner_Info.html",
    "title": "Class Enemy_Spawner_Info | Example Unity documentation",
    "keywords": "Class Enemy_Spawner_Info container classe for spawner variablen Inheritance Object Enemy_Spawner_Info Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class Enemy_Spawner_Info Constructors Enemy_Spawner_Info() base constructor sets standard values Declaration public Enemy_Spawner_Info() Fields delay Declaration public float delay Field Value Type Description Single enemyPrefab Declaration public GameObject enemyPrefab Field Value Type Description GameObject enemysToSpawn Declaration public int enemysToSpawn Field Value Type Description Int32 triggerArea Declaration public GameObject triggerArea Field Value Type Description GameObject useTriggerArea Declaration public bool useTriggerArea Field Value Type Description Boolean Properties CurrentEnemysSpawned Declaration public int CurrentEnemysSpawned { get; set; } Property Value Type Description Int32 SpawnConditonFulfilled Declaration public bool SpawnConditonFulfilled { get; set; } Property Value Type Description Boolean SpawnStartet Declaration public bool SpawnStartet { get; set; } Property Value Type Description Boolean"
  },
  "api/Global.EnemyHitFlicker.html": {
    "href": "api/Global.EnemyHitFlicker.html",
    "title": "Class EnemyHitFlicker | Example Unity documentation",
    "keywords": "Class EnemyHitFlicker controls the enemy hit animation Inheritance Object EnemyHitFlicker Namespace : Global Assembly : cs.temp.dll.dll Syntax public class EnemyHitFlicker : MonoBehaviour Properties HitFlickerInQue Declaration public int HitFlickerInQue { get; set; } Property Value Type Description Int32"
  },
  "api/Global.FollowMouse.html": {
    "href": "api/Global.FollowMouse.html",
    "title": "Class FollowMouse | Example Unity documentation",
    "keywords": "Class FollowMouse script to make an object follow the cursor Inheritance Object FollowMouse Namespace : Global Assembly : cs.temp.dll.dll Syntax public class FollowMouse : MonoBehaviour Fields inv Declaration public Inventory_fill inv Field Value Type Description Inventory_fill slotMouseoverCheck Declaration public List<RemoveSlotItem> slotMouseoverCheck Field Value Type Description List < RemoveSlotItem > Properties MouseIsPressed Declaration public bool MouseIsPressed { get; set; } Property Value Type Description Boolean"
  },
  "api/Global.GameCursor.html": {
    "href": "api/Global.GameCursor.html",
    "title": "Class GameCursor | Example Unity documentation",
    "keywords": "Class GameCursor did not work properly and not in use anymore Inheritance Object GameCursor Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameCursor : MonoBehaviour Fields cursor Declaration public Texture2D cursor Field Value Type Description Texture2D hotSpot Declaration public Vector2 hotSpot Field Value Type Description Vector2 mode Declaration public CursorMode mode Field Value Type Description CursorMode"
  },
  "api/Global.Globals.html": {
    "href": "api/Global.Globals.html",
    "title": "Class Globals | Example Unity documentation",
    "keywords": "Class Globals static class to manage global variables Inheritance Object Globals Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class Globals Fields bossHpBar Declaration public static Image bossHpBar Field Value Type Description Image bossUI Declaration public static GameObject bossUI Field Value Type Description GameObject bulletPool Declaration public static List<Skill> bulletPool Field Value Type Description List < Skill > catalog Declaration public static ItemCatalog catalog Field Value Type Description ItemCatalog currentCamera Declaration public static Camera currentCamera Field Value Type Description Camera currentItem Declaration public static Item currentItem Field Value Type Description Item currentWinCondition Declaration public static Win_condition currentWinCondition Field Value Type Description Win_condition dontDestoryOnLoadObjectID Declaration public static List<string> dontDestoryOnLoadObjectID Field Value Type Description List < String > infityWaveSpawner Declaration public static List<Enemy_Spawner> infityWaveSpawner Field Value Type Description List < Enemy_Spawner > inventory Declaration public static List<Inventar_Object> inventory Field Value Type Description List < Inventar_Object > lastSceneIndex Declaration public static int lastSceneIndex Field Value Type Description Int32 menuHandler Declaration public static Menu_handler menuHandler Field Value Type Description Menu_handler money Declaration public static int money Field Value Type Description Int32 moneyDrop Declaration public static GameObject moneyDrop Field Value Type Description GameObject moneyIcon Declaration public static Sprite moneyIcon Field Value Type Description Sprite pause Declaration public static bool pause Field Value Type Description Boolean player Declaration public static GameObject player Field Value Type Description GameObject skipStartCutscene Declaration public static bool skipStartCutscene Field Value Type Description Boolean spawnerListe Declaration public static List<Enemy_Spawner> spawnerListe Field Value Type Description List < Enemy_Spawner > tempEnemyHit Declaration public static AudioSource tempEnemyHit Field Value Type Description AudioSource tooltip Declaration public static ToolTip tooltip Field Value Type Description ToolTip virtualMouse Declaration public static VirtualMouse virtualMouse Field Value Type Description VirtualMouse waveControler Declaration public static WaveControler waveControler Field Value Type Description WaveControler"
  },
  "api/Global.Globals_init.html": {
    "href": "api/Global.Globals_init.html",
    "title": "Class Globals_init | Example Unity documentation",
    "keywords": "Class Globals_init class to initialise the globale variables Inheritance Object Globals_init Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Globals_init : MonoBehaviour Fields moneyDropPrefrab Declaration public GameObject moneyDropPrefrab Field Value Type Description GameObject moneyIcon Declaration public Sprite moneyIcon Field Value Type Description Sprite tempEnemyHit Declaration public AudioSource tempEnemyHit Field Value Type Description AudioSource"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | Example Unity documentation",
    "keywords": "Namespace Global Classes AnimatorState animator state control AttachGameObjectsToParticles not in use anymore Bullet class that describes how bullets fly Bullet_pooling_watcher checks the bulletpooling list BulletInfo container class to describe the bullets BulletSoundControl controls the audio of the bullets CameraScript camera movement script CheckLevelUnlock checks if certain levels are already unlocked Controlls CustomButton creates custom button shapes Enemy class describes enemys and their movement Enemy_rotation controls the enemy rotation Enemy_skills manages the skills of the enemy Enemy_Spawner class to control the spawning of enemys Enemy_Spawner_Info container classe for spawner variablen EnemyHitFlicker controls the enemy hit animation FollowMouse script to make an object follow the cursor GameCursor did not work properly and not in use anymore Globals static class to manage global variables Globals_init class to initialise the globale variables Inventar_Object sub class of item to manage iventory objects Inventory_fill class which controlls the buyable inventory items InventoryButton class to handle the inventory button events Item baseclass for all items ItemCatalog class that saves the item Catalog and loads it KeepSoundSource class to keep the sound playing while a sceene change happens LaserTest laser animaton control LimitFrameRate limits framerate to 60 fps LoadAssets class to load assets while runtime LoadEquipmentSlots class to load the sprites of the current equipment of the ship LoadMoneyIcon class to load the money icon from the global variables LoopSoundControl controls audiosources which are split into and intro, transition and a loop Main_menu class to handel the main menu Menu_handler menu class to handle all menus except the main menu Move_in_out_Scene class handels the moving in to the playing field and out the playing field for enemies ParallaxBackground not in use anymore ParticleControl controliert die Particle system effecte und Particle Sounds Parts class to describe ship parts sub class of inventory objects Player class of the player imports the controler Interface PlayerSave class to save the player progress RaycastMask not in use anymore Rebinding_menu class which manages the rebinding of controls RemoveSlotItem class to remove equipt items SaveSettings container classe to save settings ScrollBackground class to control a scrolling background ShipEditorStatusDisplay class to control the display of items ShipMenuControl handels the keybind for exit inside the ship menu Skill class that controls the bullets Skillsequenze container classe to describe skills SkipStoryIntro class to skip the story intro SoundControl controls sound effects SpawnerCreation class to create spawner out of a referenz spawner SpeechBubbles class to control the speech bubbles StoryIntro class to control the story intro ToolTip class to show tooltips TooltipSystem class to control tooltips TooltipTrigger class to trigger tooltips TriggerCallBack classe to create trigger areas VirtualMouse class to createa a virtual mouse WaveControler class to control the wave system on the endless level Waypoint_Designer classe to help gamedesinger make waypoints Weapon describes the weapon of the player Weaponholder class to aim the weapons on cursor position WeaponInfo class to store the weapon creation info Win_condition win condition handler class Structs Controlls.Bullet_hellActions Controlls.UIActions Controlls.VirtualMouseActions Interfaces Controlls.IBullet_hellActions Controlls.IUIActions Controlls.IVirtualMouseActions Enums Control_schemes_enum the enum names for the supported controls Layer_enum enum for Layer Tag_enum enum for tags"
  },
  "api/Global.Inventar_Object.html": {
    "href": "api/Global.Inventar_Object.html",
    "title": "Class Inventar_Object | Example Unity documentation",
    "keywords": "Class Inventar_Object sub class of item to manage iventory objects Inheritance Object Item Inventar_Object Parts WeaponInfo Inherited Members Item.ID Item.Name Item.Value Item.Icon Item.Sprite Item.PatternIcon Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class Inventar_Object : Item Properties Amount Declaration public int Amount { get; set; } Property Value Type Description Int32"
  },
  "api/Global.Inventory_fill.html": {
    "href": "api/Global.Inventory_fill.html",
    "title": "Class Inventory_fill | Example Unity documentation",
    "keywords": "Class Inventory_fill class which controlls the buyable inventory items Inheritance Object Inventory_fill Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Inventory_fill : MonoBehaviour Fields audios Declaration public AudioSource audios Field Value Type Description AudioSource blockAudio Declaration public AudioSource blockAudio Field Value Type Description AudioSource display Declaration public ShipEditorStatusDisplay display Field Value Type Description ShipEditorStatusDisplay dragAndDrop Declaration public Image dragAndDrop Field Value Type Description Image LockedBox Declaration public GameObject LockedBox Field Value Type Description GameObject mainWeaponBox Declaration public GameObject mainWeaponBox Field Value Type Description GameObject partsBox Declaration public GameObject partsBox Field Value Type Description GameObject secondaryWeaponBox Declaration public GameObject secondaryWeaponBox Field Value Type Description GameObject Methods inventoryButton(Item, Boolean, GameObject) button function for every inventory button Declaration public void inventoryButton(Item i, bool locked, GameObject g) Parameters Type Name Description Item i the item which the button corresponds to Boolean locked if the current item is locked or not GameObject g the gameobject of the button mainWeaponSlotClicked(Image) main weapon equip function Declaration public void mainWeaponSlotClicked(Image button) Parameters Type Name Description Image button Image of the button secondaryWeaponSlotClicked(Image) secondary weapon equip function 1 Declaration public void secondaryWeaponSlotClicked(Image button) Parameters Type Name Description Image button Image of the button secondaryWeaponSlotTwoClicked(Image) secondary weapon equip function 2 Declaration public void secondaryWeaponSlotTwoClicked(Image button) Parameters Type Name Description Image button Image of the button shieldSlotClicked(Image) ship parts equip function Declaration public void shieldSlotClicked(Image button) Parameters Type Name Description Image button Image of the button"
  },
  "api/Global.InventoryButton.html": {
    "href": "api/Global.InventoryButton.html",
    "title": "Class InventoryButton | Example Unity documentation",
    "keywords": "Class InventoryButton class to handle the inventory button events Inheritance Object InventoryButton Implements IPointerDownHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryButton : MonoBehaviour, IPointerDownHandler Properties Inv Declaration public Inventory_fill Inv { get; set; } Property Value Type Description Inventory_fill Item Declaration public Item Item { get; set; } Property Value Type Description Item Locked Declaration public bool Locked { get; set; } Property Value Type Description Boolean Obj Declaration public GameObject Obj { get; set; } Property Value Type Description GameObject Methods OnPointerDown(PointerEventData) checks if the button was hold down to allow drag and drop Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Implements IPointerDownHandler"
  },
  "api/Global.Item.html": {
    "href": "api/Global.Item.html",
    "title": "Class Item | Example Unity documentation",
    "keywords": "Class Item baseclass for all items Inheritance Object Item Inventar_Object Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class Item Properties Icon Declaration public string Icon { get; set; } Property Value Type Description String ID Declaration public string ID { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String PatternIcon Declaration public string PatternIcon { get; set; } Property Value Type Description String Sprite Declaration public string Sprite { get; set; } Property Value Type Description String Value Declaration public int Value { get; set; } Property Value Type Description Int32"
  },
  "api/Global.ItemCatalog.html": {
    "href": "api/Global.ItemCatalog.html",
    "title": "Class ItemCatalog | Example Unity documentation",
    "keywords": "Class ItemCatalog class that saves the item Catalog and loads it Inheritance Object ItemCatalog Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class ItemCatalog Constructors ItemCatalog() standard constructor Declaration public ItemCatalog() Properties ItemList Declaration public List<Item> ItemList { get; set; } Property Value Type Description List < Item > Methods loadSettings() loads the data from the itemCatalog Declaration public static ItemCatalog loadSettings() Returns Type Description ItemCatalog retruns the saved itemCatalog savingSetting() saves the itemCatalog Declaration public void savingSetting()"
  },
  "api/Global.KeepSoundSource.html": {
    "href": "api/Global.KeepSoundSource.html",
    "title": "Class KeepSoundSource | Example Unity documentation",
    "keywords": "Class KeepSoundSource class to keep the sound playing while a sceene change happens Inheritance Object KeepSoundSource Namespace : Global Assembly : cs.temp.dll.dll Syntax public class KeepSoundSource : MonoBehaviour Fields audios Declaration public LoopSoundControl audios Field Value Type Description LoopSoundControl dontDestroyID Declaration public string dontDestroyID Field Value Type Description String playOnSceneIndex Declaration public List<int> playOnSceneIndex Field Value Type Description List < Int32 >"
  },
  "api/Global.LaserTest.html": {
    "href": "api/Global.LaserTest.html",
    "title": "Class LaserTest | Example Unity documentation",
    "keywords": "Class LaserTest laser animaton control Inheritance Object LaserTest Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LaserTest : MonoBehaviour Fields Laser Declaration public List<Animator> Laser Field Value Type Description List < Animator > loopAudio Declaration public AudioSource loopAudio Field Value Type Description AudioSource startAudio Declaration public AudioSource startAudio Field Value Type Description AudioSource Trigger Declaration public bool Trigger Field Value Type Description Boolean"
  },
  "api/Global.Layer_enum.html": {
    "href": "api/Global.Layer_enum.html",
    "title": "Enum Layer_enum | Example Unity documentation",
    "keywords": "Enum Layer_enum enum for Layer Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Layer_enum Fields Name Description bullet_border camera default empty enemy enemy_border enemy_bullets Ignore_Raycast player player_border player_bullets player_immunity TransparentFX ui UI_Overlay water"
  },
  "api/Global.LimitFrameRate.html": {
    "href": "api/Global.LimitFrameRate.html",
    "title": "Class LimitFrameRate | Example Unity documentation",
    "keywords": "Class LimitFrameRate limits framerate to 60 fps Inheritance Object LimitFrameRate Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LimitFrameRate : MonoBehaviour"
  },
  "api/Global.LoadAssets.html": {
    "href": "api/Global.LoadAssets.html",
    "title": "Class LoadAssets | Example Unity documentation",
    "keywords": "Class LoadAssets class to load assets while runtime Inheritance Object LoadAssets Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LoadAssets Constructors LoadAssets() standard constructor Declaration public LoadAssets() Methods loadGameObject(String) loads a gameobject out from the addressables path Declaration public GameObject loadGameObject(string path) Parameters Type Name Description String path the addressables path Returns Type Description GameObject the loaded gameobject loadSprite(String) loads a sprite out from the addressables path Declaration public Sprite loadSprite(string path) Parameters Type Name Description String path the addressables path Returns Type Description Sprite the loaded sprite loadText(String) loads a textAsset out from the addressables path Declaration public TextAsset loadText(string path) Parameters Type Name Description String path the addressables path Returns Type Description TextAsset the loaded textAsset releaseAllHandle() releases all loaded handels to make space in ram Declaration public void releaseAllHandle() releaseLastHandle() releases the last loaded handel to make space in ram Declaration public void releaseLastHandle()"
  },
  "api/Global.LoadEquipmentSlots.html": {
    "href": "api/Global.LoadEquipmentSlots.html",
    "title": "Class LoadEquipmentSlots | Example Unity documentation",
    "keywords": "Class LoadEquipmentSlots class to load the sprites of the current equipment of the ship Inheritance Object LoadEquipmentSlots Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LoadEquipmentSlots : MonoBehaviour Fields mainWeapon Declaration public Image mainWeapon Field Value Type Description Image secondaryWeapon Declaration public Image secondaryWeapon Field Value Type Description Image secondaryWeapon1 Declaration public Image secondaryWeapon1 Field Value Type Description Image shieldPart Declaration public Image shieldPart Field Value Type Description Image"
  },
  "api/Global.LoadMoneyIcon.html": {
    "href": "api/Global.LoadMoneyIcon.html",
    "title": "Class LoadMoneyIcon | Example Unity documentation",
    "keywords": "Class LoadMoneyIcon class to load the money icon from the global variables Inheritance Object LoadMoneyIcon Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LoadMoneyIcon : MonoBehaviour"
  },
  "api/Global.LoopSoundControl.html": {
    "href": "api/Global.LoopSoundControl.html",
    "title": "Class LoopSoundControl | Example Unity documentation",
    "keywords": "Class LoopSoundControl controls audiosources which are split into and intro, transition and a loop Inheritance Object LoopSoundControl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LoopSoundControl : MonoBehaviour Fields loopAudio Declaration public AudioSource loopAudio Field Value Type Description AudioSource startAudio Declaration public AudioSource startAudio Field Value Type Description AudioSource transitionAudio Declaration public AudioSource transitionAudio Field Value Type Description AudioSource Properties IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description Boolean Methods startPlaying() starts the audio and sets base values Declaration public void startPlaying() stopPlaying() stops the audio Declaration public void stopPlaying()"
  },
  "api/Global.Main_menu.html": {
    "href": "api/Global.Main_menu.html",
    "title": "Class Main_menu | Example Unity documentation",
    "keywords": "Class Main_menu class to handel the main menu Inheritance Object Main_menu Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Main_menu : MonoBehaviour Fields credits Declaration public GameObject credits Field Value Type Description GameObject mainMenu Declaration public GameObject mainMenu Field Value Type Description GameObject optionsMenu Declaration public GameObject optionsMenu Field Value Type Description GameObject rebidningMenu Declaration public GameObject rebidningMenu Field Value Type Description GameObject soundMenu Declaration public GameObject soundMenu Field Value Type Description GameObject Methods onClickBackToMainMenu() go to the main menu panel Declaration public void onClickBackToMainMenu() onClickBackToOptions() not in use anymore Declaration public void onClickBackToOptions() onClickControls() not in use anymore Declaration public void onClickControls() onClickCredits() go towards the credits Declaration public void onClickCredits() onClickOptions() not in use anymore Declaration public void onClickOptions() onClickOptions(Int32) loads the options sceene and saves the last active scene for going back Declaration public void onClickOptions(int index) Parameters Type Name Description Int32 index onClickSound() not in use anymore Declaration public void onClickSound() playGame() load the first game Scene Declaration public void playGame() quitGame() quit the game Declaration public void quitGame()"
  },
  "api/Global.Menu_handler.html": {
    "href": "api/Global.Menu_handler.html",
    "title": "Class Menu_handler | Example Unity documentation",
    "keywords": "Class Menu_handler menu class to handle all menus except the main menu Inheritance Object Menu_handler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Menu_handler : MonoBehaviour Fields bossHpBar Declaration public Image bossHpBar Field Value Type Description Image bossUI Declaration public GameObject bossUI Field Value Type Description GameObject enemyKilledCounterText Declaration public List<Text> enemyKilledCounterText Field Value Type Description List < Text > gameOverUI Declaration public GameObject gameOverUI Field Value Type Description GameObject levelFinishedUI Declaration public GameObject levelFinishedUI Field Value Type Description GameObject levelSelectUI Declaration public GameObject levelSelectUI Field Value Type Description GameObject menuList Declaration public List<GameObject> menuList Field Value Type Description List < GameObject > menuName Declaration public Text menuName Field Value Type Description Text moneyEarnedText Declaration public List<Text> moneyEarnedText Field Value Type Description List < Text > pauseUI Declaration public GameObject pauseUI Field Value Type Description GameObject playtimeText Declaration public List<Text> playtimeText Field Value Type Description List < Text > score Declaration public Text score Field Value Type Description Text selectedButtonImages Declaration public List<Image> selectedButtonImages Field Value Type Description List < Image > shipMenuUI Declaration public GameObject shipMenuUI Field Value Type Description GameObject toalMoneyText Declaration public List<Text> toalMoneyText Field Value Type Description List < Text > tooltipToogle Declaration public Toggle tooltipToogle Field Value Type Description Toggle Properties Playtime Declaration public float Playtime { get; set; } Property Value Type Description Single Methods addScore(Int32) not in use anymore Declaration public void addScore(int points) Parameters Type Name Description Int32 points points to add to score onChangedScore() shows the player Score (not in use anymore) shows the current wace and enemies to kill in the endless mode Declaration public void onChangedScore() onClickActivateGameobnect(GameObject) activates the set gameobject on click Declaration public void onClickActivateGameobnect(GameObject game) Parameters Type Name Description GameObject game the game object to set active onClickBack() not in use anymore Declaration public void onClickBack() onClickExitShipEditor(Int32) ship editor exit button clicked Declaration public void onClickExitShipEditor(int sceneIndex) Parameters Type Name Description Int32 sceneIndex index of the new sceene onClickGoBackToPreviousScene() goes back to the last saved scene index Declaration public void onClickGoBackToPreviousScene() onClickLevelSelect(Int32) level button clicked Declaration public void onClickLevelSelect(int levelSceneIndex) Parameters Type Name Description Int32 levelSceneIndex level scene index onClickMainMenu(Int32) to main menu scene Declaration public void onClickMainMenu(int sceneIndex) Parameters Type Name Description Int32 sceneIndex main menu scene index onClickMenuItem(GameObject) shows the set menu Declaration public void onClickMenuItem(GameObject game) Parameters Type Name Description GameObject game menu to show onClickNextLeve(Int32) next level button clicked Declaration public void onClickNextLeve(int backupSeneIndex) Parameters Type Name Description Int32 backupSeneIndex backup scene index if no next level exists onClickOptions(Int32) options button clieckd saves the current scene index for going back to this scene Declaration public void onClickOptions(int index) Parameters Type Name Description Int32 index index of options menu onClickSetMenuName(String) not in use anymore Declaration public void onClickSetMenuName(string name) Parameters Type Name Description String name onclickSetToogle(GameObject) on click tooltip button saves the tooltip on/off state Declaration public void onclickSetToogle(GameObject game) Parameters Type Name Description GameObject game the tooltip button onClickShipEditor(Int32) ship editor button clicked Declaration public void onClickShipEditor(int sceneIndex) Parameters Type Name Description Int32 sceneIndex index of ship editor onClickShipMenu(Int32) ship menu button clicked Declaration public void onClickShipMenu(int sceneIndex) Parameters Type Name Description Int32 sceneIndex ship menu scene index onClickTryAgain() load current scene again Declaration public void onClickTryAgain() onClickWorldSelect() not in use anymore Declaration public void onClickWorldSelect() onSelectButton(Image) button select function Declaration public void onSelectButton(Image button) Parameters Type Name Description Image button image to be enabled when the button is selected onTooltipToogleChanged(Toggle) on changes of the tooltip toogle saves the tooltip on/off state Declaration public void onTooltipToogleChanged(Toggle tog) Parameters Type Name Description Toggle tog the toogle which cause the change setGameOver() activates the game over menu Declaration public void setGameOver() setLevelFinish() activates the level finish menu Declaration public void setLevelFinish() setPause() activates the pause menu Declaration public void setPause() setResume() deactivates the pause menu Declaration public void setResume()"
  },
  "api/Global.Move_in_out_Scene.html": {
    "href": "api/Global.Move_in_out_Scene.html",
    "title": "Class Move_in_out_Scene | Example Unity documentation",
    "keywords": "Class Move_in_out_Scene class handels the moving in to the playing field and out the playing field for enemies Inheritance Object Move_in_out_Scene Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Move_in_out_Scene : MonoBehaviour Fields body Declaration public Rigidbody2D body Field Value Type Description Rigidbody2D force Declaration public float force Field Value Type Description Single maxSpeed Declaration public float maxSpeed Field Value Type Description Single moveInWaypoints Declaration public List<Vector2> moveInWaypoints Field Value Type Description List < Vector2 > moveOutWaypoints Declaration public List<Vector2> moveOutWaypoints Field Value Type Description List < Vector2 > waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject Methods startMoveOut() starts the move out Declaration public void startMoveOut()"
  },
  "api/Global.ParallaxBackground.html": {
    "href": "api/Global.ParallaxBackground.html",
    "title": "Class ParallaxBackground | Example Unity documentation",
    "keywords": "Class ParallaxBackground not in use anymore Inheritance Object ParallaxBackground Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ParallaxBackground : MonoBehaviour Fields Camera Declaration public GameObject Camera Field Value Type Description GameObject speed Declaration public float speed Field Value Type Description Single"
  },
  "api/Global.ParticleControl.html": {
    "href": "api/Global.ParticleControl.html",
    "title": "Class ParticleControl | Example Unity documentation",
    "keywords": "Class ParticleControl controliert die Particle system effecte und Particle Sounds Inheritance Object ParticleControl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ParticleControl : MonoBehaviour Fields anim Declaration public Animator anim Field Value Type Description Animator destroyAfterPlay Declaration public bool destroyAfterPlay Field Value Type Description Boolean particle Declaration public ParticleSystem particle Field Value Type Description ParticleSystem particleAudio Declaration public List<AudioSource> particleAudio Field Value Type Description List < AudioSource >"
  },
  "api/Global.Parts.html": {
    "href": "api/Global.Parts.html",
    "title": "Class Parts | Example Unity documentation",
    "keywords": "Class Parts class to describe ship parts sub class of inventory objects Inheritance Object Item Inventar_Object Parts Inherited Members Inventar_Object.Amount Item.ID Item.Name Item.Value Item.Icon Item.Sprite Item.PatternIcon Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class Parts : Inventar_Object Properties HealthBoost Declaration public int HealthBoost { get; set; } Property Value Type Description Int32 ShieldRefreshValueBoost Declaration public float ShieldRefreshValueBoost { get; set; } Property Value Type Description Single"
  },
  "api/Global.Player.html": {
    "href": "api/Global.Player.html",
    "title": "Class Player | Example Unity documentation",
    "keywords": "Class Player class of the player imports the controler Interface Inheritance Object Player Implements Controlls.IBullet_hellActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Player : MonoBehaviour, Controlls.IBullet_hellActions Fields additionalDmg Declaration public float additionalDmg Field Value Type Description Single body Declaration public Rigidbody2D body Field Value Type Description Rigidbody2D chargeAudio Declaration public AudioSource chargeAudio Field Value Type Description AudioSource chargeSprites Declaration public List<Sprite> chargeSprites Field Value Type Description List < Sprite > chargeUI Declaration public Image chargeUI Field Value Type Description Image crackedLevel1 Declaration public Sprite crackedLevel1 Field Value Type Description Sprite crackedLevel2 Declaration public Sprite crackedLevel2 Field Value Type Description Sprite crackedScreenOverlay Declaration public Image crackedScreenOverlay Field Value Type Description Image crackedScreenOverlay2 Declaration public Image crackedScreenOverlay2 Field Value Type Description Image crackedSound Declaration public AudioSource crackedSound Field Value Type Description AudioSource currentschield Declaration public float currentschield Field Value Type Description Single dashAudio Declaration public AudioSource dashAudio Field Value Type Description AudioSource deathEffect Declaration public GameObject deathEffect Field Value Type Description GameObject dmgModifier Declaration public float dmgModifier Field Value Type Description Single dogeCharges Declaration public int dogeCharges Field Value Type Description Int32 dogeCooldown Declaration public float dogeCooldown Field Value Type Description Single dogeRange Declaration public float dogeRange Field Value Type Description Single dogeSpeed Declaration public float dogeSpeed Field Value Type Description Single force Declaration public float force Field Value Type Description Single globalCooldown Declaration public float globalCooldown Field Value Type Description Single healthbar Declaration public Image healthbar Field Value Type Description Image healthbarAbove30 Declaration public Color healthbarAbove30 Field Value Type Description Color healthbarAbove60 Declaration public Color healthbarAbove60 Field Value Type Description Color healthbarBelow30 Declaration public Color healthbarBelow30 Field Value Type Description Color hitAudio Declaration public AudioSource hitAudio Field Value Type Description AudioSource immunityFlickerRate Declaration public float immunityFlickerRate Field Value Type Description Single immunityTimeAfterDoge Declaration public float immunityTimeAfterDoge Field Value Type Description Single immunityTimeAfterHit Declaration public float immunityTimeAfterHit Field Value Type Description Single maxBaseHealth Declaration public float maxBaseHealth Field Value Type Description Single maxDogeDuration Declaration public float maxDogeDuration Field Value Type Description Single maxFlickerRange Declaration public float maxFlickerRange Field Value Type Description Single maxschield Declaration public float maxschield Field Value Type Description Single maxSpeed Declaration public float maxSpeed Field Value Type Description Single playerBulletSoundPrefab Declaration public GameObject playerBulletSoundPrefab Field Value Type Description GameObject schieldbar Declaration public Image schieldbar Field Value Type Description Image schieldbarStepValue Declaration public float schieldbarStepValue Field Value Type Description Single schieldRefreshBaseValue Declaration public float schieldRefreshBaseValue Field Value Type Description Single schieldRefreshRate Declaration public float schieldRefreshRate Field Value Type Description Single ship Declaration public GameObject ship Field Value Type Description GameObject trail Declaration public TrailRenderer trail Field Value Type Description TrailRenderer waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject WeaponSlots Declaration public List<GameObject> WeaponSlots Field Value Type Description List < GameObject > Properties CurrentHealth Declaration public float CurrentHealth { get; set; } Property Value Type Description Single Impulse Declaration public Vector2 Impulse { get; } Property Value Type Description Vector2 ShieldPart Declaration public Parts ShieldPart { get; set; } Property Value Type Description Parts Timestamp Declaration public float Timestamp { get; set; } Property Value Type Description Single Methods clearControlls() destroys den controller input Declaration public void clearControlls() OnDoge(InputAction.CallbackContext) controler action of the doge input Declaration public void OnDoge(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_down(InputAction.CallbackContext) controler action of the move down input Declaration public void OnMove_down(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_left(InputAction.CallbackContext) controler action of the move left input Declaration public void OnMove_left(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_rigth(InputAction.CallbackContext) controler action of the move right input Declaration public void OnMove_rigth(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_up(InputAction.CallbackContext) controler action of the move up input Declaration public void OnMove_up(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPause_menu(InputAction.CallbackContext) controler action of the pause input Declaration public void OnPause_menu(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnShoot(InputAction.CallbackContext) controler action of the shoot input Declaration public void OnShoot(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context schieldRefresh(Single) corutine which charges the shield after it was depleted Declaration public IEnumerator schieldRefresh(float wait) Parameters Type Name Description Single wait delay in seconds Returns Type Description IEnumerator smoothHealthDrop() corutine which makes live drop smoothly and colorizes the health Declaration public IEnumerator smoothHealthDrop() Returns Type Description IEnumerator smoothSchieldDrop() corutine which makes the shield bar drop smootly and fill smoothly Declaration public IEnumerator smoothSchieldDrop() Returns Type Description IEnumerator takeDmg(Single) take dmg funktion Declaration public void takeDmg(float dmg) Parameters Type Name Description Single dmg the dmg the player takes Implements Controlls.IBullet_hellActions"
  },
  "api/Global.PlayerSave.html": {
    "href": "api/Global.PlayerSave.html",
    "title": "Class PlayerSave | Example Unity documentation",
    "keywords": "Class PlayerSave class to save the player progress Inheritance Object PlayerSave Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class PlayerSave Constructors PlayerSave() base values for a new player Declaration public PlayerSave() Properties BoughtItems Declaration public List<string> BoughtItems { get; set; } Property Value Type Description List < String > Level1Played Declaration public bool Level1Played { get; set; } Property Value Type Description Boolean MainWeapon Declaration public WeaponInfo MainWeapon { get; set; } Property Value Type Description WeaponInfo Money Declaration public int Money { get; set; } Property Value Type Description Int32 SecondaryWeapon Declaration public WeaponInfo SecondaryWeapon { get; set; } Property Value Type Description WeaponInfo SecondaryWeapon1 Declaration public WeaponInfo SecondaryWeapon1 { get; set; } Property Value Type Description WeaponInfo ShieldPart Declaration public Parts ShieldPart { get; set; } Property Value Type Description Parts TutorialPlayed Declaration public bool TutorialPlayed { get; set; } Property Value Type Description Boolean Methods loadSettings() loads the player information from the saved data, if exists Declaration public static PlayerSave loadSettings() Returns Type Description PlayerSave returns the saved player information savingSetting() saves player information Declaration public void savingSetting()"
  },
  "api/Global.RaycastMask.html": {
    "href": "api/Global.RaycastMask.html",
    "title": "Class RaycastMask | Example Unity documentation",
    "keywords": "Class RaycastMask not in use anymore Inheritance Object RaycastMask Implements ICanvasRaycastFilter Namespace : Global Assembly : cs.temp.dll.dll Syntax public class RaycastMask : MonoBehaviour, ICanvasRaycastFilter Methods IsRaycastLocationValid(Vector2, Camera) Declaration public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera) Parameters Type Name Description Vector2 sp Camera eventCamera Returns Type Description Boolean Implements ICanvasRaycastFilter"
  },
  "api/Global.Rebinding_menu.html": {
    "href": "api/Global.Rebinding_menu.html",
    "title": "Class Rebinding_menu | Example Unity documentation",
    "keywords": "Class Rebinding_menu class which manages the rebinding of controls Inheritance Object Rebinding_menu Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Rebinding_menu : MonoBehaviour Fields actionKeybind Declaration public GameObject actionKeybind Field Value Type Description GameObject actionName Declaration public GameObject actionName Field Value Type Description GameObject buttonBack Declaration public GameObject buttonBack Field Value Type Description GameObject buttonDefault Declaration public GameObject buttonDefault Field Value Type Description GameObject buttonRebind Declaration public GameObject buttonRebind Field Value Type Description GameObject buttonSave Declaration public GameObject buttonSave Field Value Type Description GameObject itemHolder Declaration public GameObject itemHolder Field Value Type Description GameObject saveAlert Declaration public GameObject saveAlert Field Value Type Description GameObject ScrollView Declaration public GameObject ScrollView Field Value Type Description GameObject viewPanel Declaration public GameObject viewPanel Field Value Type Description GameObject Methods loadRebinding(Controlls) loads the rebinds into the controler Declaration public Controlls loadRebinding(Controlls cont) Parameters Type Name Description Controlls cont the controler on which the rebinds are to be sete Returns Type Description Controlls returns the controler with the set rebinds onClickAlertButton() closes the alert window if the saving was not succesful Declaration public void onClickAlertButton() onClickGamepad() opens the gamepad rebinding menu Declaration public void onClickGamepad() onClickMouseAndKey() opens the mouse and keyboard rebinding menu Declaration public void onClickMouseAndKey() saveRebinding() saves the rebinding in a json file user specific on the pc it can only be saved if all rebinds are unique Declaration public void saveRebinding()"
  },
  "api/Global.RemoveSlotItem.html": {
    "href": "api/Global.RemoveSlotItem.html",
    "title": "Class RemoveSlotItem | Example Unity documentation",
    "keywords": "Class RemoveSlotItem class to remove equipt items Inheritance Object RemoveSlotItem Namespace : Global Assembly : cs.temp.dll.dll Syntax public class RemoveSlotItem : MonoBehaviour Fields audios Declaration public AudioSource audios Field Value Type Description AudioSource isMainWeapon Declaration public bool isMainWeapon Field Value Type Description Boolean isSecondaryWeapon Declaration public bool isSecondaryWeapon Field Value Type Description Boolean isSecondaryWeapon1 Declaration public bool isSecondaryWeapon1 Field Value Type Description Boolean isShipPart Declaration public bool isShipPart Field Value Type Description Boolean Properties Image Declaration public Image Image { get; set; } Property Value Type Description Image IsMouseOver Declaration public bool IsMouseOver { get; set; } Property Value Type Description Boolean Methods setMouseOver(Boolean) sets true if the cursor is curently over this gameobject Declaration public void setMouseOver(bool value) Parameters Type Name Description Boolean value"
  },
  "api/Global.SaveSettings.html": {
    "href": "api/Global.SaveSettings.html",
    "title": "Class SaveSettings | Example Unity documentation",
    "keywords": "Class SaveSettings container classe to save settings Inheritance Object SaveSettings Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class SaveSettings Constructors SaveSettings(Boolean, Single, Single, Single) standard consturktor Declaration public SaveSettings(bool isMute, float backgroundVolume, float sfxVolume, float masterVolume) Parameters Type Name Description Boolean isMute setzt mute button Single backgroundVolume setzt background Volume 0-1 Single sfxVolume setzt sfx Volume 0-1 Single masterVolume Properties BackgroundVolume Declaration public float BackgroundVolume { get; set; } Property Value Type Description Single IsMute Declaration public bool IsMute { get; set; } Property Value Type Description Boolean IsToogleOn Declaration public bool IsToogleOn { get; set; } Property Value Type Description Boolean MasterVolume Declaration public float MasterVolume { get; set; } Property Value Type Description Single SfxVolume Declaration public float SfxVolume { get; set; } Property Value Type Description Single Methods loadSettings() loads the setting out of a saved data if it exists Declaration public static SaveSettings loadSettings() Returns Type Description SaveSettings returns the saved settings savingSetting() saves the settings Declaration public void savingSetting()"
  },
  "api/Global.ScrollBackground.html": {
    "href": "api/Global.ScrollBackground.html",
    "title": "Class ScrollBackground | Example Unity documentation",
    "keywords": "Class ScrollBackground class to control a scrolling background Inheritance Object ScrollBackground Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ScrollBackground : MonoBehaviour Fields images Declaration public Image[] images Field Value Type Description Image [] maxXOffset Declaration public float maxXOffset Field Value Type Description Single speed Declaration public float speed Field Value Type Description Single yPosBorder Declaration public float yPosBorder Field Value Type Description Single"
  },
  "api/Global.ShipEditorStatusDisplay.html": {
    "href": "api/Global.ShipEditorStatusDisplay.html",
    "title": "Class ShipEditorStatusDisplay | Example Unity documentation",
    "keywords": "Class ShipEditorStatusDisplay class to control the display of items Inheritance Object ShipEditorStatusDisplay Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ShipEditorStatusDisplay : MonoBehaviour Fields dmgNameText Declaration public Text dmgNameText Field Value Type Description Text dmgText Declaration public Text dmgText Field Value Type Description Text itemName Declaration public Text itemName Field Value Type Description Text ownedMoney Declaration public Text ownedMoney Field Value Type Description Text parrernIconName Declaration public Text parrernIconName Field Value Type Description Text patternIcon Declaration public Image patternIcon Field Value Type Description Image reloadTimeNameText Declaration public Text reloadTimeNameText Field Value Type Description Text reloadTimeText Declaration public Text reloadTimeText Field Value Type Description Text Methods changeInfoDispaly(Item) changes the item to display Declaration public void changeInfoDispaly(Item item) Parameters Type Name Description Item item new item to display MoneyChanged() displays new money value Declaration public void MoneyChanged()"
  },
  "api/Global.ShipMenuControl.html": {
    "href": "api/Global.ShipMenuControl.html",
    "title": "Class ShipMenuControl | Example Unity documentation",
    "keywords": "Class ShipMenuControl handels the keybind for exit inside the ship menu Inheritance Object ShipMenuControl Implements Controlls.IBullet_hellActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ShipMenuControl : MonoBehaviour, Controlls.IBullet_hellActions Methods OnDoge(InputAction.CallbackContext) here not in use Declaration public void OnDoge(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_down(InputAction.CallbackContext) here not in use Declaration public void OnMove_down(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_left(InputAction.CallbackContext) here not in use Declaration public void OnMove_left(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_rigth(InputAction.CallbackContext) here not in use Declaration public void OnMove_rigth(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_up(InputAction.CallbackContext) here not in use Declaration public void OnMove_up(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPause_menu(InputAction.CallbackContext) exits to the main menu Declaration public void OnPause_menu(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnShoot(InputAction.CallbackContext) here not in use Declaration public void OnShoot(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context Implements Controlls.IBullet_hellActions"
  },
  "api/Global.Skill.html": {
    "href": "api/Global.Skill.html",
    "title": "Class Skill | Example Unity documentation",
    "keywords": "Class Skill class that controls the bullets Inheritance Object Skill Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Skill : MonoBehaviour Fields bulletInfoList Declaration public List<BulletInfo> bulletInfoList Field Value Type Description List < BulletInfo > maxDuration Declaration public int maxDuration Field Value Type Description Int32 Properties Timestamp Declaration public float Timestamp { get; set; } Property Value Type Description Single Methods checkDisabled() checks if all child objects are inactive, so the skill can be deactivated is called if a bullet is deactivated Declaration public void checkDisabled() layerChange() changes the layer of the bullets if the layer of the skill changes Declaration public void layerChange() setDmgModifiers(Single, Single) set modifier on the bullet Declaration public void setDmgModifiers(float additionalDmg, float dmgModifier) Parameters Type Name Description Single additionalDmg increases the dmg directly on the bullet by this value Single dmgModifier after adding the additional dmg to the bullet dmg the resulting value is multiplied by this value setSfxSoundOnBullets(GameObject) sets the sfx sound on the bullet Declaration public void setSfxSoundOnBullets(GameObject sound) Parameters Type Name Description GameObject sound the sfx prefab that is to be played"
  },
  "api/Global.Skillsequenze.html": {
    "href": "api/Global.Skillsequenze.html",
    "title": "Class Skillsequenze | Example Unity documentation",
    "keywords": "Class Skillsequenze container classe to describe skills Inheritance Object Skillsequenze Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class Skillsequenze Constructors Skillsequenze(Single, GameObject, Boolean) construktor classe Declaration public Skillsequenze(float delay, GameObject skill, bool shootInRotatedDirection) Parameters Type Name Description Single delay delay between skills GameObject skill the skill to be used Boolean shootInRotatedDirection if the skill is to be shoot in the rotated direction Properties Delay Declaration public float Delay { get; } Property Value Type Description Single ShootInRotatedDirection Declaration public bool ShootInRotatedDirection { get; set; } Property Value Type Description Boolean Skill Declaration public GameObject Skill { get; } Property Value Type Description GameObject"
  },
  "api/Global.SkipStoryIntro.html": {
    "href": "api/Global.SkipStoryIntro.html",
    "title": "Class SkipStoryIntro | Example Unity documentation",
    "keywords": "Class SkipStoryIntro class to skip the story intro Inheritance Object SkipStoryIntro Implements Controlls.IBullet_hellActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkipStoryIntro : MonoBehaviour, Controlls.IBullet_hellActions Fields intro Declaration public StoryIntro intro Field Value Type Description StoryIntro Methods OnDoge(InputAction.CallbackContext) not in use here Declaration public void OnDoge(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_down(InputAction.CallbackContext) not in use here Declaration public void OnMove_down(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_left(InputAction.CallbackContext) not in use here Declaration public void OnMove_left(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_rigth(InputAction.CallbackContext) not in use here Declaration public void OnMove_rigth(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove_up(InputAction.CallbackContext) not in use here Declaration public void OnMove_up(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPause_menu(InputAction.CallbackContext) skips the story intro Declaration public void OnPause_menu(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnShoot(InputAction.CallbackContext) not in use here Declaration public void OnShoot(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context Implements Controlls.IBullet_hellActions"
  },
  "api/Global.SoundControl.html": {
    "href": "api/Global.SoundControl.html",
    "title": "Class SoundControl | Example Unity documentation",
    "keywords": "Class SoundControl controls sound effects Inheritance Object SoundControl Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SoundControl : MonoBehaviour Fields background Declaration public AudioMixerGroup background Field Value Type Description AudioMixerGroup backgroundSlider Declaration public Slider backgroundSlider Field Value Type Description Slider masterGroup Declaration public AudioMixerGroup masterGroup Field Value Type Description AudioMixerGroup masterSlider Declaration public Slider masterSlider Field Value Type Description Slider muteButton Declaration public Image muteButton Field Value Type Description Image muteSp Declaration public Sprite muteSp Field Value Type Description Sprite sfx Declaration public AudioMixerGroup sfx Field Value Type Description AudioMixerGroup sfxSlider Declaration public Slider sfxSlider Field Value Type Description Slider unMuteSp Declaration public Sprite unMuteSp Field Value Type Description Sprite Methods backgroundSoundChange() sets the backgroundsound after changing the slider Declaration public void backgroundSoundChange() masterSoundChange() sets the master sound after changing the slider Declaration public void masterSoundChange() saveSettingChanges() saves the sound settings Declaration public void saveSettingChanges() setStartSettings() sets the loaded setting on the UI sets the soundgroups Declaration public void setStartSettings() sfxChanged() sets the sfx sound after changing the slider Declaration public void sfxChanged() toggleMute() toggel the mute button Declaration public void toggleMute()"
  },
  "api/Global.SpawnerCreation.html": {
    "href": "api/Global.SpawnerCreation.html",
    "title": "Class SpawnerCreation | Example Unity documentation",
    "keywords": "Class SpawnerCreation class to create spawner out of a referenz spawner Inheritance Object SpawnerCreation Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SpawnerCreation : MonoBehaviour Fields flipOffset Declaration public bool flipOffset Field Value Type Description Boolean moveInOutOffset Declaration public Vector2 moveInOutOffset Field Value Type Description Vector2 refSpawner Declaration public GameObject refSpawner Field Value Type Description GameObject useWaypointOffsetX Declaration public bool useWaypointOffsetX Field Value Type Description Boolean useWaypointOffsetY Declaration public bool useWaypointOffsetY Field Value Type Description Boolean"
  },
  "api/Global.SpeechBubbles.html": {
    "href": "api/Global.SpeechBubbles.html",
    "title": "Class SpeechBubbles | Example Unity documentation",
    "keywords": "Class SpeechBubbles class to control the speech bubbles Inheritance Object SpeechBubbles Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SpeechBubbles : MonoBehaviour Fields audios Declaration public AudioSource audios Field Value Type Description AudioSource Trigger Declaration public GameObject Trigger Field Value Type Description GameObject UiObject Declaration public GameObject UiObject Field Value Type Description GameObject"
  },
  "api/Global.StoryIntro.html": {
    "href": "api/Global.StoryIntro.html",
    "title": "Class StoryIntro | Example Unity documentation",
    "keywords": "Class StoryIntro class to control the story intro Inheritance Object StoryIntro Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StoryIntro : MonoBehaviour Fields mainMenu Declaration public GameObject mainMenu Field Value Type Description GameObject slides Declaration public List<GameObject> slides Field Value Type Description List < GameObject > Properties Skip Declaration public bool Skip { get; set; } Property Value Type Description Boolean"
  },
  "api/Global.Tag_enum.html": {
    "href": "api/Global.Tag_enum.html",
    "title": "Enum Tag_enum | Example Unity documentation",
    "keywords": "Enum Tag_enum enum for tags Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum Tag_enum Fields Name Description bullet_border enemy_border player_border"
  },
  "api/Global.ToolTip.html": {
    "href": "api/Global.ToolTip.html",
    "title": "Class ToolTip | Example Unity documentation",
    "keywords": "Class ToolTip class to show tooltips Inheritance Object ToolTip Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ToolTip : MonoBehaviour Fields characterWrapLimit Declaration public int characterWrapLimit Field Value Type Description Int32 contentField Declaration public Text contentField Field Value Type Description Text headerField Declaration public Text headerField Field Value Type Description Text layoutElement Declaration public LayoutElement layoutElement Field Value Type Description LayoutElement tooltipToogled Declaration public bool tooltipToogled Field Value Type Description Boolean Methods SetText(String, String) sets the tootip tiext Declaration public void SetText(string content, string header = \"\") Parameters Type Name Description String content text to display in the content text field String header text to display in the header text field"
  },
  "api/Global.TooltipSystem.html": {
    "href": "api/Global.TooltipSystem.html",
    "title": "Class TooltipSystem | Example Unity documentation",
    "keywords": "Class TooltipSystem class to control tooltips Inheritance Object TooltipSystem Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TooltipSystem : MonoBehaviour Fields tooltip Declaration public ToolTip tooltip Field Value Type Description ToolTip Methods Hide() hides the tooltip Declaration public static void Hide() Show(String, String) shows the tooltip if it is enabled Declaration public static void Show(string content, string header = \"\") Parameters Type Name Description String content text to display in the content text field String header text to display in the header text field Start() loads the tooltip settings Declaration public void Start()"
  },
  "api/Global.TooltipTrigger.html": {
    "href": "api/Global.TooltipTrigger.html",
    "title": "Class TooltipTrigger | Example Unity documentation",
    "keywords": "Class TooltipTrigger class to trigger tooltips Inheritance Object TooltipTrigger Implements IPointerEnterHandler IPointerExitHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TooltipTrigger : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler Fields content Declaration public string content Field Value Type Description String header Declaration public string header Field Value Type Description String Methods OnPointerEnter(PointerEventData) shows the tooltips if the cursor is over a button Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) hides the tooltip if the cursor leaves the button Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Implements IPointerEnterHandler IPointerExitHandler"
  },
  "api/Global.TriggerCallBack.html": {
    "href": "api/Global.TriggerCallBack.html",
    "title": "Class TriggerCallBack | Example Unity documentation",
    "keywords": "Class TriggerCallBack classe to create trigger areas Inheritance Object TriggerCallBack Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TriggerCallBack : MonoBehaviour Fields moneyDrop Declaration public bool moneyDrop Field Value Type Description Boolean spawnerActivationTrigger Declaration public bool spawnerActivationTrigger Field Value Type Description Boolean spawnTrigger Declaration public bool spawnTrigger Field Value Type Description Boolean Properties MoneyValue Declaration public int MoneyValue { set; } Property Value Type Description Int32"
  },
  "api/Global.VirtualMouse.html": {
    "href": "api/Global.VirtualMouse.html",
    "title": "Class VirtualMouse | Example Unity documentation",
    "keywords": "Class VirtualMouse class to createa a virtual mouse Inheritance Object VirtualMouse Implements Controlls.IVirtualMouseActions Namespace : Global Assembly : cs.temp.dll.dll Syntax public class VirtualMouse : MonoBehaviour, Controlls.IVirtualMouseActions Fields canvas Declaration public Canvas canvas Field Value Type Description Canvas canvasRect Declaration public RectTransform canvasRect Field Value Type Description RectTransform cursor Declaration public RectTransform cursor Field Value Type Description RectTransform hardwareMouseVisible Declaration public bool hardwareMouseVisible Field Value Type Description Boolean speed Declaration public float speed Field Value Type Description Single Properties VirtualMouseProperty Declaration public Mouse VirtualMouseProperty { get; } Property Value Type Description Mouse Methods loadNewRebinds() load reabindings of the virtuals mouse Declaration public void loadNewRebinds() OnLeftMouseButton(InputAction.CallbackContext) input action left mouse button for the virtual mouse Declaration public void OnLeftMouseButton(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMiddleMouseButton(InputAction.CallbackContext) input action middle mouse button for the virtual mouse Declaration public void OnMiddleMouseButton(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMoveCursor(InputAction.CallbackContext) input action move cursor for the virtual mouse Declaration public void OnMoveCursor(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPoint(InputAction.CallbackContext) input action of the system mouse for the virtual mouse Declaration public void OnPoint(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRightMouseButton(InputAction.CallbackContext) input action right mouse button for the virtual mouse Declaration public void OnRightMouseButton(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnScroll(InputAction.CallbackContext) input action scroll for the virtual mouse Declaration public void OnScroll(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnToogleMouseVisibility(InputAction.CallbackContext) input action to toogle the visibility of the system mouse Declaration public void OnToogleMouseVisibility(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context Implements Controlls.IVirtualMouseActions"
  },
  "api/Global.WaveControler.html": {
    "href": "api/Global.WaveControler.html",
    "title": "Class WaveControler | Example Unity documentation",
    "keywords": "Class WaveControler class to control the wave system on the endless level Inheritance Object WaveControler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class WaveControler : MonoBehaviour Fields maxEnemys Declaration public int maxEnemys Field Value Type Description Int32 minEnemys Declaration public int minEnemys Field Value Type Description Int32 Properties CurrentWave Declaration public int CurrentWave { get; set; } Property Value Type Description Int32 Methods startNextWave() starts the next wave upgrades the enemies and player depending on the wave level Declaration public void startNextWave() waveFinished() wave was finished upgrades wave values starts timer for next wave Declaration public void waveFinished()"
  },
  "api/Global.Waypoint_Designer.html": {
    "href": "api/Global.Waypoint_Designer.html",
    "title": "Class Waypoint_Designer | Example Unity documentation",
    "keywords": "Class Waypoint_Designer classe to help gamedesinger make waypoints Inheritance Object Waypoint_Designer Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Waypoint_Designer : MonoBehaviour Fields enemyDelayToNextWaypoint Declaration public float enemyDelayToNextWaypoint Field Value Type Description Single force Declaration public float force Field Value Type Description Single line Declaration public LineRenderer line Field Value Type Description LineRenderer loop Declaration public bool loop Field Value Type Description Boolean restartAfter Declaration public float restartAfter Field Value Type Description Single speed Declaration public float speed Field Value Type Description Single waypointList Declaration public List<GameObject> waypointList Field Value Type Description List < GameObject > waypointPrefab Declaration public GameObject waypointPrefab Field Value Type Description GameObject waypoints Declaration public List<Vector2> waypoints Field Value Type Description List < Vector2 > Methods paintWayoints() activates the seting of waypoints Declaration public void paintWayoints()"
  },
  "api/Global.Weapon.html": {
    "href": "api/Global.Weapon.html",
    "title": "Class Weapon | Example Unity documentation",
    "keywords": "Class Weapon describes the weapon of the player Inheritance Object Weapon Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Weapon : MonoBehaviour Fields additionalDmg Declaration public int additionalDmg Field Value Type Description Int32 dmgModifier Declaration public float dmgModifier Field Value Type Description Single reloadTime Declaration public float reloadTime Field Value Type Description Single shootsToCreate Declaration public int shootsToCreate Field Value Type Description Int32 skill Declaration public GameObject skill Field Value Type Description GameObject sound Declaration public GameObject sound Field Value Type Description GameObject Methods activateSkill(Boolean) creates skills and sets them on the right position and activates them checks bevor creation new skills if they are in the bulletpool can also create skill ahead of time Declaration public GameObject activateSkill(bool preCreation) Parameters Type Name Description Boolean preCreation if true then creates bullets ahead of time Returns Type Description GameObject Gameobject of Skill shoot(Single, Single) creates the skill object with dmg modifiers if the weapon can shoot Declaration public void shoot(float additionalDmg, float dmgModifier) Parameters Type Name Description Single additionalDmg increases the dmg of the bullet directly by this value Single dmgModifier after adding the additional dmg to the bullet dmg multiply the resulting value by this value"
  },
  "api/Global.Weaponholder.html": {
    "href": "api/Global.Weaponholder.html",
    "title": "Class Weaponholder | Example Unity documentation",
    "keywords": "Class Weaponholder class to aim the weapons on cursor position Inheritance Object Weaponholder Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Weaponholder : MonoBehaviour Fields rotationSpeed Declaration public float rotationSpeed Field Value Type Description Single"
  },
  "api/Global.WeaponInfo.html": {
    "href": "api/Global.WeaponInfo.html",
    "title": "Class WeaponInfo | Example Unity documentation",
    "keywords": "Class WeaponInfo class to store the weapon creation info Inheritance Object Item Inventar_Object WeaponInfo Inherited Members Inventar_Object.Amount Item.ID Item.Name Item.Value Item.Icon Item.Sprite Item.PatternIcon Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class WeaponInfo : Inventar_Object Fields additionalDmg Declaration public int additionalDmg Field Value Type Description Int32 dmgModifier Declaration public float dmgModifier Field Value Type Description Single mainWeapon Declaration public bool mainWeapon Field Value Type Description Boolean reloadTime Declaration public float reloadTime Field Value Type Description Single shootsToCreate Declaration public int shootsToCreate Field Value Type Description Int32 skill Declaration public string skill Field Value Type Description String"
  },
  "api/Global.Win_condition.html": {
    "href": "api/Global.Win_condition.html",
    "title": "Class Win_condition | Example Unity documentation",
    "keywords": "Class Win_condition win condition handler class Inheritance Object Win_condition Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Win_condition : MonoBehaviour Fields audios Declaration public AudioSource audios Field Value Type Description AudioSource boxcollider Declaration public BoxCollider2D boxcollider Field Value Type Description BoxCollider2D enemysToKill Declaration public int enemysToKill Field Value Type Description Int32 lighting Declaration public Light2D lighting Field Value Type Description Light2D rotate Declaration public bool rotate Field Value Type Description Boolean rotateSpeed Declaration public float rotateSpeed Field Value Type Description Single sp Declaration public SpriteRenderer sp Field Value Type Description SpriteRenderer spawnDelay Declaration public float spawnDelay Field Value Type Description Single Methods activateLevelFinishPortal() activates the level end portal Declaration public void activateLevelFinishPortal() enemyKilled() reduces the enemy kill counter by 1 Declaration public void enemyKilled()"
  }
}